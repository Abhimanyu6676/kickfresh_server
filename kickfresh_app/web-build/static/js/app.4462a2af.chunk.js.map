{"version":3,"sources":["src/comp/homescreencomp/category/CategoryList.js","src/comp/homescreencomp/category/Category.js","src/comp/common/SearchBar.js","src/screens/UserScreen.js","src/redux/ReduxStore.js","src/redux/reducers/CartListReducer.js","src/redux/reducers/DimensionReducer.js","src/redux/actions/DimensionAction.js","src/services/Background.js","src/navigation/useLinking.js","src/redux/ReduxConstants.js","src/services/gqls.js","src/screens/CartScreen.js","src/comp/cartComp/CartList.js","src/redux/actions/CartListAction.js","src/services/CartUpdate.js","src/comp/common/itemViews/ItemType1.js","src/comp/homescreencomp/subcategory/SubCategory.js","web-build/register-service-worker.js","App.js","src/Application.js","src/navigation/Routes.js","src/comp/cartComp/MobileLoginBlock.js","src/comp/cartComp/CartItem.js","src/comp/common/quantityViews/QuantityView1.js","src/comp/cartComp/CartInfo.js","src/comp/cartComp/Checkout.js","src/navigation/BottomTabNavigator.js","components/TabBarIcon.js","constants/Colors.js","src/screens/LinksScreen.js","src/navigation/StoreNavigation.js","src/comp/homescreencomp/HomeScreen.js","src/comp/homescreencomp/TrendingRow.js","src/comp/common/quantityViews/QuantityView2.js","src/comp/homescreencomp/BannerRow.js"],"names":["props","useQuery","gql_allCatogries","loading","error","data","useEffect","View","style","ComStyles","container","dimensions","window","width","MobStyles","PcStyles","Category","SubCategory","navigation","allCategories","StyleSheet","create","Accordion","backgroundColor","dataArray","animation","expanded","renderHeader","Row","borderRadius","marginTop","marginHorizontal","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","Col","overflow","flex","alignItems","paddingHorizontal","paddingVertical","borderWidth","borderColor","Image","source","uri","marginLeft","justifyContent","marginBottom","Text","fontSize","fontWeight","color","map","Item","borderLeftWidth","FontAwesome","name","renderContent","itemDimension","spacing","items","renderItem","item","index","TouchableOpacity","key","alignSelf","onPress","navigate","CategoryList","textAlign","SearchBar","useState","keyword","setkeyword","gql_SearchProducts","variables","ProductName","flexDirection","padding","Form","Input","placeholder","SearchText","onChangeText","text","Icon","SearchIcon","paddingTop","ScrollView","minHeight","maxHeight","allProducts","borderBottomWidth","borderBottomColor","marginVertical","position","UserScreen","route","username","setUsername","pass","setPass","Cokkie","setCokkie","setOptions","headerTitle","paddingRight","headerRight","r","Cookies","get","handleSignIn","getTest","then","res","console","log","catch","err","floatingLabel","Label","last","Button","title","c","set","async","Promise","resolve","reject","axios","timeout","response","JSON","stringify","allReducers","combineReducers","cartReducer","DimensionReducer","store","createStore","initialState","cartList","state","action","type","reduxConstants","CART_LIST","Dimension","screen","DIMENSION","Background","service","setInterval","clearInterval","containerRef","useLinking","prefixes","Linking","makeUrl","config","Root","path","screens","Home","Links","Settings","gql","gql_trendingProducts","gql_SubCategoryProducts","Dimensions","CartScreen","connect","cart","Price","setPrice","setDimensions","onDimensionChange","P","currQty","addEventListener","removeEventListener","MobileLoginBlock","CartListContainer","CartList","length","rtrQty","cartUpdated","Cart","Product","push","updated","newCart","ItemType1","quantity","setQuantity","useSelector","dispatch","useDispatch","useFocusEffect","productQty","styles","top","zIndex","itemImage","loadingStyle","size","textDecorationLine","parseInt","Breakqty","Unit","Quantity","Add","AddToCart","Qty","cartListAction","Remove","RemoveFromCart","params","headerStyle","margin","FlatList","horizontal","showsHorizontalScrollIndicator","keyExtractor","replace","textTransform","handleBackPress","backHandler","BackHandler","remove","message","navigator","serviceWorker","register","scope","info","React","isLoadingComplete","setLoadingComplete","setInitialNavigationState","useRef","getInitialState","SplashScreen","preventAutoHide","Font","loadAsync","warn","hide","skipLoadingScreen","client","ApolloClient","cache","InMemoryCache","link","HttpLink","host","credentials","handleAppStateChange","nextAppState","setState","appState","AppState","currentState","this","Provider","ApolloProvider","Component","Stack","createStackNavigator","AppStackNavigator","NavigationContainer","Navigator","initialRouteName","Screen","component","BottomTabNavigator","CartItems","List","_ListItem","ListItem","thumbnail","Left","Thumbnail","square","Body","note","numberOfLines","Right","QuantityView1","qty","AddressSection","AmountSection","AmountRow","AmountCol1","AmountCol2","display","Charges","container2","marginRight","CartInfo","setCharges","Checkout","checkOutText","setCheckOutText","borderBottomLeftRadius","borderBottomRightRadius","BottomTab","createBottomTabNavigator","transparent","right","StoreNavigation","options","tabBarIcon","focused","LinksScreen","Ionicons","Colors","tabIconSelected","tabIconDefault","tintColor","tabBar","errorBackground","errorText","warningBackground","warningText","noticeBackground","noticeText","HomeScreen","Homescreen","headerShown","TrendingRow","navigationOptions","header","istate","_data","head","AddView","add","ItemAddView","RemoveButton","centerText","amountText","AddButton","alignContent","button","carouselItems","BannerRow","onChange","layout","ref","carousel","sliderWidth","itemWidth","_renderItem"],"mappings":"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","file":"static/js/app.4462a2af.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\nimport {View, StyleSheet, Text} from 'react-native';\nimport Category from './Category';\n//-->GQL Imports\nimport {useQuery} from '@apollo/client';\nimport {gql_allCatogries} from '../../../services/gqls';\n\nconst CategoryList = (props) => {\n  const {loading, error, data} = useQuery(gql_allCatogries);\n  const _data = [\n    {\n      Category: 'Loading...',\n      SubCategory: [],\n    },\n    {\n      Category: 'Category...',\n      SubCategory: [],\n    },\n  ];\n\n  useEffect(() => {\n    //effect\n    return () => {\n      //cleanup\n    };\n  });\n\n  if (loading || error)\n    return (\n      <View\n        style={[\n          ComStyles.container,\n          props.dimensions.window.width < 500\n            ? MobStyles.container\n            : PcStyles.container,\n        ]}>\n        <Category\n          data={_data}\n          dimensions={props.dimensions}\n          navigation={props.navigation}\n        />\n      </View>\n    );\n\n  return (\n    <View\n      style={[\n        ComStyles.container,\n        props.dimensions.window.width < 500\n          ? MobStyles.container\n          : PcStyles.container,\n      ]}>\n      <Category\n        data={data.allCategories}\n        dimensions={props.dimensions}\n        navigation={props.navigation}\n      />\n    </View>\n  );\n};\n\nexport default CategoryList;\n\nconst ComStyles = StyleSheet.create({\n  container: {},\n});\n\nconst MobStyles = StyleSheet.create({\n  container: {},\n});\n\nconst TabStyles = StyleSheet.create({\n  container: {},\n});\n\nconst PcStyles = StyleSheet.create({\n  container: {},\n});\n","import React, {useState} from 'react';\nimport {Text, TouchableOpacity, Image} from 'react-native';\nimport {View, Row, Col, Left, Body, Right, Accordion, Grid} from 'native-base';\nimport {FontAwesome} from '@expo/vector-icons';\nimport GridView from 'react-native-super-grid';\n\nexport default Category = (props) => {\n  let {navigation} = props;\n  const CustomHeader = (props) => {\n    return (\n      <Row\n        style={{\n          borderRadius: 5,\n          marginTop: 15,\n          marginHorizontal: 5,\n          shadowColor: '#000',\n          shadowOffset: {\n            width: 0,\n            height: 0,\n          },\n          shadowOpacity: 0.25,\n          shadowRadius: 5,\n          elevation: 5,\n        }}>\n        <Col style={{overflow: 'hidden', flex: 4}}>\n          <Row\n            style={{\n              alignItems: 'center',\n              paddingHorizontal: 20,\n              paddingVertical: 10,\n            }}>\n            <View\n              style={{\n                height: 70,\n                width: 100,\n                borderWidth: 0,\n                borderColor: '#00f',\n              }}>\n              <Image\n                style={{width: 100, height: 70}}\n                source={{\n                  uri:\n                    'http://192.168.1.90:3000/static/images/productImages/' +\n                    props.Category +\n                    '/' +\n                    props.Category +\n                    '.png',\n                }}\n              />\n            </View>\n            <View style={{marginLeft: 20}}>\n              <Row>\n                <View\n                  style={{\n                    backgroundColor: '#0a0',\n                    borderRadius: 10,\n                    paddingHorizontal: 5,\n                    paddingVertical: 2,\n                    justifyContent: 'center',\n                    marginBottom: 5,\n                  }}>\n                  <Text\n                    style={{fontSize: 10, fontWeight: '600', color: '#fff'}}>\n                    offer upto 20%\n                  </Text>\n                </View>\n              </Row>\n              <Row>\n                <Text style={{fontSize: 15, color: '#aaa', fontWeight: '600'}}>\n                  {props.Category}\n                </Text>\n              </Row>\n              <Row>\n                <Text style={{color: '#aaa', fontSize: 10}}>\n                  {props.SubCategory.map((Item) => {\n                    return Item.SubCategory + ', ';\n                  })}\n                </Text>\n              </Row>\n            </View>\n          </Row>\n        </Col>\n\n        <Col\n          style={{\n            borderColor: '#0a0',\n            borderWidth: 0,\n            flex: 1,\n            justifyContent: 'center',\n            alignItems: 'flex-end',\n          }}>\n          <View\n            style={{\n              height: 70,\n              width: 60,\n              justifyContent: 'center',\n              alignItems: 'center',\n              borderLeftWidth: 1,\n              borderColor: '#aaa',\n            }}>\n            <FontAwesome\n              name=\"chevron-down\"\n              style={{color: '#aaa', fontSize: 22}}\n            />\n          </View>\n        </Col>\n      </Row>\n    );\n  };\n\n  const CustomContent = (props) => {\n    return (\n      <View style={{marginLeft: 0}}>\n        <GridView\n          itemDimension={100}\n          spacing={10}\n          items={props.SubCategory}\n          renderItem={(item, index) => (\n            <TouchableOpacity\n              key={index}\n              style={{alignSelf: 'center'}}\n              onPress={() => {\n                navigation.navigate('SubCategory', {\n                  SubCategory: item.item,\n                  CategoryList: props.SubCategory,\n                });\n              }}>\n              <View style={{width: 100}}>\n                <View\n                  //IMAGE\n                  style={{\n                    height: 100,\n                    width: 100,\n                    borderWidth: 1,\n                  }}></View>\n                <Text\n                  style={{\n                    color: '#aaa',\n                    fontSize: 10,\n                    fontWeight: '600',\n                    textAlign: 'center',\n                  }}>\n                  {item.item.SubCategory}\n                </Text>\n                <View\n                  style={{\n                    backgroundColor: '#0a0',\n                    paddingHorizontal: 5,\n                    paddingVertical: 2,\n                    alignSelf: 'center',\n                    borderRadius: 10,\n                  }}>\n                  <Text style={{fontWeight: '600', fontSize: 8, color: '#fff'}}>\n                    upto 20% off\n                  </Text>\n                </View>\n              </View>\n            </TouchableOpacity>\n          )}\n        />\n      </View>\n    );\n  };\n\n  return (\n    <View\n      style={[\n        ComStyles.container,\n        props.dimensions.window.width < 500\n          ? MobStyles.container\n          : PcStyles.container,\n      ]}>\n      <Accordion\n        style={{backgroundColor: 'transparent'}}\n        dataArray={props.data}\n        animation={true}\n        expanded={true}\n        renderHeader={CustomHeader}\n        renderContent={CustomContent}\n      />\n    </View>\n  );\n};\n\nimport {StyleSheet} from 'react-native';\n\nconst ComStyles = StyleSheet.create({\n  container: {},\n});\n\nconst MobStyles = StyleSheet.create({\n  container: {},\n});\n\nconst TabStyles = StyleSheet.create({\n  container: {},\n});\n\nconst PcStyles = StyleSheet.create({\n  container: {},\n});\n","import React, {useState} from 'react';\nimport {View, Text, TextInput, ScrollView} from 'react-native';\nimport {Icon, Row, Form, Item, Input} from 'native-base';\nimport {useQuery} from '@apollo/client';\nimport {gql_SearchProducts} from '../../services/gqls';\n\nexport default SearchBar = (props) => {\n  const [keyword, setkeyword] = useState('');\n  const {loading, error, data} = useQuery(gql_SearchProducts, {\n    variables: {ProductName: keyword},\n  });\n\n  return (\n    <View\n      style={[\n        ComStyles.container,\n        props.dimensions.window.width < 500\n          ? MobStyles.container\n          : PcStyles.container,\n      ]}>\n      <View style={{flexDirection: 'row', padding: 2}}>\n        <View style={{flex: 1}}>\n          <Form>\n            <Item>\n              <Input\n                placeholder=\"Search Products\"\n                style={[\n                  ComStyles.SearchText,\n                  {height: 40, borderWidth: 0, flex: 1},\n                ]}\n                onChangeText={(text) => setkeyword(text)}\n              />\n            </Item>\n          </Form>\n        </View>\n        <View\n          style={{\n            height: '100%',\n            paddingHorizontal: 8,\n          }}>\n          <Icon name=\"search\" style={[ComStyles.SearchIcon, {paddingTop: 6}]} />\n        </View>\n      </View>\n      {data && keyword != '' && (\n        <ScrollView\n          style={{minHeight: 50, maxHeight: 200, backgroundColor: '#fff'}}>\n          {data.allProducts.map((item, index) => {\n            return (\n              <View\n                style={{\n                  borderBottomWidth: 1,\n                  borderBottomColor: '#aaa',\n                  height: 40,\n                  justifyContent: 'center',\n                }}>\n                <Text style={{paddingHorizontal: 10, color: '#aaa'}}>\n                  {item.ProductName}\n                </Text>\n              </View>\n            );\n          })}\n        </ScrollView>\n      )}\n    </View>\n  );\n};\n\nimport {StyleSheet} from 'react-native';\n\nconst ComStyles = StyleSheet.create({\n  container: {\n    backgroundColor: '#eee',\n    borderWidth: 0,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 0,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 5,\n    elevation: 5,\n    marginVertical: 15,\n  },\n  SearchText: {\n    color: '#aaa',\n    justifyContent: 'center',\n    fontSize: 15,\n    flex: 1,\n    paddingHorizontal: 8,\n  },\n  SearchIcon: {\n    color: '#7a0',\n    position: 'absolute',\n    alignSelf: 'flex-end',\n    justifyContent: 'center',\n  },\n});\n\nconst MobStyles = StyleSheet.create({\n  container: {},\n});\n\nconst TabStyles = StyleSheet.create({\n  container: {},\n});\n\nconst PcStyles = StyleSheet.create({\n  container: {},\n});\n","import React, {useState, useEffect} from 'react';\nimport {View, Text, Button} from 'react-native';\nimport * as WebBrowser from 'expo-web-browser';\nimport {Form, Item, Input, Label} from 'native-base';\nimport Cookies from 'js-cookie';\nimport axios from 'axios';\n\nexport default UserScreen = (props) => {\n  const {navigation, route} = props;\n  const [username, setUsername] = useState('');\n  const [pass, setPass] = useState('');\n  const [Cokkie, setCokkie] = useState('random');\n\n  navigation.setOptions({\n    headerTitle: (props) => <View style={{paddingRight: 5}}></View>,\n    headerRight: () => (\n      <View\n        style={{\n          justifyContent: 'center',\n          paddingHorizontal: 15,\n          borderWidth: 0,\n        }}></View>\n    ),\n  });\n\n  useEffect(() => {\n    let r = Cookies.get('random');\n    setCokkie(r ? r : 'empty');\n    return () => {};\n  });\n\n  handleSignIn = () => {\n    getTest()\n      .then((res) => console.log(res))\n      .catch((err) => console.log(err));\n  };\n  return (\n    <View>\n      <Text>User Screen</Text>\n      {/*  <Button\n        title=\"Open WebBrowser\"\n        onPress={async () => {\n          await WebBrowser.openBrowserAsync('http://localhost:3000/test');\n        }}\n      /> */}\n\n      <Form>\n        <Item floatingLabel>\n          <Label>Username</Label>\n          <Input onChangeText={(text) => setUsername(text)} />\n        </Item>\n        <Item floatingLabel last>\n          <Label>Password</Label>\n          <Input onChangeText={(text) => setPass(text)} />\n        </Item>\n      </Form>\n      <Button title=\"Send Request\" onPress={handleSignIn}></Button>\n      <Button\n        style={{marginTop: 5}}\n        title=\"Check Cokkie\"\n        onPress={() => {\n          const c = Cookies.get('co');\n          Cookies.set('user', username);\n          console.log('Cokkie :: ' + c);\n        }}></Button>\n      <Text>{username}</Text>\n      <Text>{pass}</Text>\n      <Text>{Cokkie}</Text>\n    </View>\n  );\n};\n\nconst getTest = async () => {\n  return new Promise(async (resolve, reject) => {\n    await axios\n      .get(\n        'http://localhost:3000/test',\n        {},\n        {\n          timeout: 2000,\n        },\n      )\n      .then((response) => {\n        console.log(JSON.stringify(response));\n        resolve(response);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n","import { createStore, combineReducers } from \"redux\";\nimport { cartReducer } from \"./reducers/CartListReducer\";\nimport { DimensionReducer } from \"./reducers/DimensionReducer\";\n\nconst allReducers = combineReducers({\n  cartReducer,\n  DimensionReducer\n});\nexport const store = createStore(allReducers);\n","import {reduxConstants} from '../ReduxConstants';\n\nconst initialState = {\n  cartList: [],\n};\n\nexport const cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxConstants.CART_LIST:\n      return action.cartList;\n\n    default:\n      return state;\n  }\n};\n","import { reduxConstants } from \"../ReduxConstants\";\n\nconst initialState = {\n  Dimension: { window: 0, screen: 0 }\n};\n\nexport const DimensionReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxConstants.DIMENSION:\n      return action.Dimension;\n\n    default:\n      return state;\n  }\n};\n","import { reduxConstants } from \"../ReduxConstants\";\n\nexport const DimensionAction = Dimension => {\n  return {\n    type: reduxConstants.DIMENSION,\n    Dimension: Dimension\n  };\n};\n","import React, {useEffect} from 'react';\nimport {View} from 'react-native';\nimport Cookies from 'js-cookie';\n\nexport default Background = (props) => {\n  useEffect(() => {\n    const service = setInterval(() => {\n      console.log('^^^^' + JSON.stringify(Cookies.get('test1')));\n    }, 1000);\n    return () => {\n      clearInterval(service);\n    };\n  });\n\n  return <View></View>;\n};\n","import { useLinking } from \"@react-navigation/native\";\nimport { Linking } from \"expo\";\n\nexport default function(containerRef) {\n  return useLinking(containerRef, {\n    prefixes: [Linking.makeUrl(\"/\")],\n    config: {\n      Root: {\n        path: \"root\",\n        screens: {\n          Home: \"home\",\n          Links: \"links\",\n          Settings: \"settings\"\n        }\n      }\n    }\n  });\n}\n","export const reduxConstants = {\n  CART_LIST: 'CART_LIST',\n  DIMENSION: 'DIMENSION',\n};\n","import {gql} from '@apollo/client';\nimport SubCategory from '../comp/homescreencomp/subcategory/SubCategory';\n\nexport const gql_allCatogries = gql`\n  {\n    allCategories {\n      Category\n      SubCategory {\n        SubCategory\n      }\n    }\n  }\n`;\n\nexport const gql_trendingProducts = gql`\n  {\n    allProducts(where: {isTrending_gt: 0}) {\n      ProductName\n      Category\n      SubCategory\n      Price\n      Breakqty\n      isTrending\n      Unit\n    }\n  }\n`;\n\nexport const gql_SubCategoryProducts = gql`\n  query Products($SubCategory: String!) {\n    allProducts(where: {SubCategory: $SubCategory}) {\n      ProductName\n      Category\n      SubCategory\n      Price\n      Breakqty\n      isTrending\n      Unit\n    }\n  }\n`;\n\nexport const gql_SearchProducts = gql`\n  query Products($ProductName: String!) {\n    allProducts(where: {ProductName_contains: $ProductName}) {\n      ProductName\n      Category\n      SubCategory\n      Price\n      Breakqty\n      isTrending\n      Unit\n    }\n  }\n`;\n","import React, {useEffect, useState} from 'react';\nimport {View, Text, Dimensions} from 'react-native';\nimport {Row, Container, Thumbnail, Button} from 'native-base';\nimport {MobileLoginBlock} from '../comp/cartComp/MobileLoginBlock';\nimport CartList from '../comp/cartComp/CartList';\nimport axios from 'axios';\nimport useAxios from 'axios-hooks';\nimport {connect} from 'react-redux';\nimport {ScrollView, TouchableOpacity} from 'react-native-gesture-handler';\nimport CartInfo from '../comp/cartComp/CartInfo';\n\nconst window = Dimensions.get('window');\nconst screen = Dimensions.get('screen');\n\nconst Cartscreen = (props) => {\n  const {navigation, route} = props;\n  const [Price, setPrice] = useState(0);\n  const [dimensions, setDimensions] = useState({window, screen});\n\n  const onDimensionChange = ({window, screen}) => {\n    setDimensions({window, screen});\n  };\n\n  useEffect(() => {\n    //effect\n    let P = 0;\n    props.cart.map((item, index) => {\n      P = item.currQty * item.Price + P;\n    });\n    setPrice(P);\n    Dimensions.addEventListener('change', onDimensionChange);\n    return () => {\n      //cleanup\n      Dimensions.removeEventListener('change', onDimensionChange);\n    };\n  });\n  navigation.setOptions({\n    headerTitle: (props) => (\n      <View style={{paddingRight: 5}}>\n        <Row>\n          <Text style={{fontWeight: 'bold', fontSize: 20, color: '#7a0'}}>\n            Cart\n          </Text>\n        </Row>\n        <Row>\n          <Text style={{color: '#aaa'}}>\n            Total Cart Value is <Text style={{color: '#0aa'}}>{Price}</Text>\n          </Text>\n        </Row>\n      </View>\n    ),\n    /*  headerRight: () => (\n      <Container>\n      </Container>\n    ) */\n  });\n\n  return (\n    <ScrollView style={{backgroundColor: '#eee'}}>\n      <MobileLoginBlock dimensions={dimensions} />\n      <CartList dimensions={dimensions} />\n      <CartInfo dimensions={dimensions} />\n    </ScrollView>\n  );\n};\n\nexport default CartScreen = connect((state) => ({\n  cart: state.cartReducer.cartList,\n}))(Cartscreen);\n\nconst getAllProducts = async () => {\n  return new Promise(async (resolve, reject) => {\n    await axios\n      .get(\n        'http://localhost:3000/',\n        {},\n        {\n          timeout: 2000,\n        },\n      )\n      .then((response) => {\n        console.log(\n          'axios response-- ' +\n            'LoginAPI_status::' +\n            response.status +\n            'LoginAPI_body::' +\n            response.data,\n        );\n        resolve(response);\n        //cbRes(\"pass\")\n      })\n      .catch((error) => {\n        console.log('axios error:', error);\n        reject(error);\n      });\n  });\n};\n","import React, { useState, useEffect } from \"react\";\nimport { View, Text } from \"react-native\";\nimport CartItems from \"./CartItem\";\nimport { connect } from \"react-redux\";\n\nconst Cartlist = props => {\n  return (\n    <View\n      style={[\n        ComStyles.CartListContainer,\n        props.dimensions.window.width < 500\n          ? MobStyles.CartListContainer\n          : PcStyles.CartListContainer\n      ]}\n    >\n      <Text style={{ color: \"#aaa\", fontSize: 15, alignSelf: \"center\" }}>\n        You have {props.cart.length ? props.cart.length : 0} Items in your cart\n      </Text>\n      <CartItems />\n    </View>\n  );\n};\n\nimport { StyleSheet } from \"react-native\";\n\nconst ComStyles = StyleSheet.create({\n  CartListContainer: {\n    backgroundColor: \"#fff\",\n    borderWidth: 0,\n    alignSelf: \"center\",\n    borderRadius: 10\n  }\n});\n\nconst MobStyles = StyleSheet.create({\n  CartListContainer: {\n    width: \"90vw\"\n  }\n});\n\nconst TabStyles = StyleSheet.create({\n  CartListContainer: {}\n});\n\nconst PcStyles = StyleSheet.create({\n  CartListContainer: {\n    width: \"80vw\"\n  }\n});\n\nexport default CartList = connect(state => ({\n  cart: state.cartReducer.cartList\n}))(Cartlist);\n","import {reduxConstants} from '../ReduxConstants';\n\nexport const cartListAction = (cartList) => {\n  return {\n    type: reduxConstants.CART_LIST,\n    cartList: cartList,\n  };\n};\n","import {CartList} from '../comp/cartComp/CartList';\n\n/**\n * @param {, Product, Cart, Qty}\n *    - props\n *        -- Product : Product to add\n *        -- Cart    : Current cartList\n *        -- Qty     : Quantity to add(default : 1)\n */\nexport const AddToCart = (props) => {\n  let cartList = [];\n  let cartUpdated = false;\n  let P, rtrQty;\n  props.Cart.map((item, index) => {\n    if (item.ProductName == props.Product.ProductName) {\n      item.currQty++;\n      P = item;\n      cartUpdated = true;\n      cartList.push(item);\n    } else {\n      cartList.push(item);\n    }\n  });\n  if (!cartUpdated) {\n    P = Object.assign({}, props.Product);\n    if (P.currQty >= 0) P.currQty++;\n    else P['currQty'] = 1;\n    cartList.push(P);\n    cartUpdated = true;\n  }\n  rtrQty = P.currQty;\n  return {cartList: cartList, updated: cartUpdated, rtrQty: rtrQty};\n};\n\n/**\n * @param {, Cart, Qty, ProductName} props\n *  - Props\n *    -- ProductName : ProductName for the Product to be removed\n *    -- Cart        : Current cartList\n *    -- Qty         : Quantity to remove(default : 1)\n *\n * @returns {, CartList:Array, updated:Boolean}\n */\nexport const RemoveFromCart = (props) => {\n  let cartList = props.Cart;\n  let cartUpdated = false;\n  let P, rtrQty;\n  let newCart = [];\n  cartList.map((item, index) => {\n    if (item.ProductName == props.ProductName) {\n      P = item;\n      if (item.currQty >= 1) {\n        item.currQty--;\n        P = item;\n        if (item.currQty > 0) {\n          newCart.push(item);\n          rtrQty = item.currQty;\n        }\n        cartUpdated = true;\n      } else {\n        cartUpdated = true;\n      }\n    } else {\n      newCart.push(item);\n    }\n  });\n  if (!cartUpdated) {\n    cartUpdated = false;\n  }\n  return {cartList: newCart, updated: cartUpdated, rtrQty: rtrQty};\n};\n","import React, {useState, useEffect} from 'react';\nimport {View, StyleSheet, Text, Image} from 'react-native';\nimport QuantityView2 from '../quantityViews/QuantityView2';\nimport {Row} from 'native-base';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {cartListAction} from '../../../redux/actions/CartListAction';\nimport {useFocusEffect} from '@react-navigation/native';\nimport {AddToCart, RemoveFromCart} from '../../../services/CartUpdate';\nimport ImageLoad from 'react-native-image-placeholder';\n\nexport default ItemType1 = (props) => {\n  const [quantity, setQuantity] = useState(0);\n  const cart = useSelector((state) => state.cartReducer.cartList);\n  const dispatch = useDispatch();\n\n  useFocusEffect(() => {\n    //console.log('focus');\n    return () => {};\n  });\n\n  useEffect(() => {\n    //Effect\n    console.log('effect');\n    let productQty = 0;\n    cart.map((item, index) => {\n      if (item.ProductName == props.item.ProductName) {\n        productQty = item.currQty ? item.currQty : 0;\n      }\n    });\n    setQuantity(productQty);\n    return () => {\n      //CleanUp\n    };\n  });\n\n  const Add = () => {\n    let r = AddToCart({\n      Product: props.item,\n      Cart: cart,\n      Qty: 1,\n    });\n    //setQuantity(r.rtrQty ? r.rtrQty : 0);\n    dispatch(cartListAction({cartList: r.cartList}));\n  };\n\n  const Remove = () => {\n    let r = RemoveFromCart({\n      Cart: cart,\n      Qty: 1,\n      ProductName: props.item.ProductName,\n    });\n    //setQuantity(r.rtrQty ? r.rtrQty : 0);\n    dispatch(cartListAction({cartList: r.cartList}));\n  };\n\n  return (\n    <View style={styles.container}>\n      <View\n        style={{\n          width: '100%',\n          alignItems: 'center',\n          justifyContent: 'center',\n          padding: 10,\n        }}>\n        <View\n          style={{\n            position: 'absolute',\n            top: 2,\n            alignSelf: 'flex-start',\n            backgroundColor: '#0a0',\n            borderRadius: 10,\n            paddingHorizontal: 4,\n            paddingVertical: 2,\n            zIndex: 2,\n          }}>\n          <Text style={{fontSize: 10, fontWeight: '600', color: '#fff'}}>\n            15% off\n          </Text>\n        </View>\n        <View style={styles.itemImage}>\n          <ImageLoad\n            style={{width: 120, height: 80}}\n            loadingStyle={{\n              size: 'large',\n              color: '#aaa',\n              width: 120,\n              height: 80,\n            }}\n            source={{\n              uri:\n                'http://192.168.1.90:3000/static/images/productImages/' +\n                props.item.Category +\n                '/' +\n                props.item.SubCategory +\n                '/' +\n                props.item.ProductName +\n                '.png',\n            }}\n          />\n        </View>\n      </View>\n      <View>\n        <Row>\n          <Text\n            style={{\n              paddingHorizontal: 8,\n              fontSize: 14,\n              fontWeight: '700',\n              color: '#777',\n            }}>\n            {props.item.Price}\n          </Text>\n          <Text\n            style={{\n              textDecorationLine: 'line-through',\n              fontSize: 10,\n              fontWeight: '600',\n              color: '#aaa',\n              alignSelf: 'flex-end',\n            }}>\n            {parseInt(props.item.Price) + 5}\n          </Text>\n        </Row>\n        <Row>\n          <Text\n            style={{\n              paddingHorizontal: 8,\n              paddingTop: 2,\n              fontSize: 12,\n              fontWeight: '700',\n              color: '#777',\n              height: 30,\n              borderWidth: 0,\n            }}>\n            {props.item.ProductName}\n          </Text>\n        </Row>\n        <Row>\n          <Text\n            style={{\n              paddingHorizontal: 8,\n              paddingTop: 2,\n              fontSize: 10,\n              fontWeight: '600',\n              color: '#777',\n            }}>\n            {props.item.Breakqty + ' ' + props.item.Unit}\n          </Text>\n        </Row>\n      </View>\n      <QuantityView2 Quantity={quantity} Add={Add} Remove={Remove} />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    width: 150,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 4,\n    },\n    shadowOpacity: 0.32,\n    shadowRadius: 5.46,\n    elevation: 9,\n    marginVertical: 10,\n    marginHorizontal: 5,\n    overflow: 'hidden',\n    alignSelf: 'center',\n  },\n  itemImage: {\n    height: 80,\n    width: 120,\n    borderWidth: 0,\n    borderColor: '#0f0',\n  },\n});\n\n/* export default ItemType1 = connect(\n  (state) => ({\n    cart: state.cartReducer.cartList,\n  }),\n  {cartListAction},\n)(Itemtype1); */\n","import React, {useEffect} from 'react';\nimport {Text, View, ScrollView, FlatList, BackHandler} from 'react-native';\nimport GridView from 'react-native-super-grid';\nimport ItemType1 from '../../common/itemViews/ItemType1';\nimport {TouchableOpacity} from 'react-native-gesture-handler';\n//-->GQL Imports\nimport {useQuery} from '@apollo/client';\nimport {gql_SubCategoryProducts} from '../../../services/gqls';\n\nexport default SubCategory = (props) => {\n  const {CategoryList, SubCategory} = props.route.params;\n  const {loading, error, data} = useQuery(gql_SubCategoryProducts, {\n    variables: {SubCategory: SubCategory.SubCategory},\n  });\n\n  useEffect(() => {\n    //effect\n    //console.log('%%' + SubCategory.SubCategory);\n    return () => {\n      //cleanup\n    };\n  });\n\n  props.navigation.setOptions({\n    headerStyle: {\n      padding: 0,\n      margin: 0,\n    },\n    headerTitle: () => (\n      <View\n        style={{\n          width: '100vw',\n          paddingRight: 100,\n        }}>\n        <FlatList\n          horizontal\n          showsHorizontalScrollIndicator={false}\n          data={CategoryList}\n          keyExtractor={(item, index) => 'key' + index}\n          renderItem={({item, index}) => {\n            return (\n              <TouchableOpacity\n                style={{paddingVertical: 10}}\n                onPress={() => {\n                  console.log(JSON.stringify(item.SubCategory));\n                  props.navigation.replace('SubCategory', {\n                    SubCategory: {SubCategory: item.SubCategory},\n                    CategoryList: CategoryList,\n                  });\n                }}>\n                <Text\n                  style={{\n                    color: '#aaa',\n                    fontWeight: '600',\n                    textTransform: 'uppercase',\n                    padding: 10,\n                  }}>\n                  {item.SubCategory}\n                </Text>\n              </TouchableOpacity>\n            );\n          }}\n        />\n      </View>\n    ),\n  });\n\n  const handleBackPress = () => {\n    console.log('go back');\n    //this.goBack(); // works best when the goBack is async\n    return true;\n  };\n\n  useEffect(() => {\n    //effect\n    const backHandler = BackHandler.addEventListener(\n      'hardwareBackPress',\n      handleBackPress,\n    );\n    return () => {\n      //cleanup\n      backHandler.remove();\n    };\n  });\n\n  if (loading)\n    return (\n      <View>\n        <Text>Loading...</Text>\n      </View>\n    );\n  if (error)\n    return (\n      <View>\n        <Text>{JSON.stringify(error.message)}</Text>\n      </View>\n    );\n  return (\n    <ScrollView>\n      <View\n        style={{\n          backgroundColor: '#fff',\n          borderWidth: 0,\n        }}>\n        {/* <Text>{props.route.params.SubCategory.SubCategory}</Text> */}\n        <GridView\n          itemDimension={150}\n          items={data.allProducts}\n          spacing={10}\n          style={{flex: 1}}\n          renderItem={(item, index) => <ItemType1 item={item.item} />}\n        />\n      </View>\n    </ScrollView>\n  );\n};\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","/**\n * FreshKick Expo App\n * https://freshkick.com/Home\n *\n * @flow\n */\n\nimport React, { useEffect } from \"react\";\nimport Application from \"./src/Application\";\nimport { SplashScreen } from \"expo\";\nimport * as Font from \"expo-font\";\nimport useLinking from \"./src/navigation/useLinking\";\n\nconst App = props => {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n  const [initialNavigationState, setInitialNavigationState] = React.useState();\n  const containerRef = React.useRef();\n  const { getInitialState } = useLinking(containerRef);\n\n  // Load any resources or data that we need prior to rendering the app\n  useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHide();\n\n        // Load our initial navigation state\n        setInitialNavigationState(await getInitialState());\n\n        // Load fonts\n        await Font.loadAsync({\n          /* ...Ionicons.font,\n          \"space-mono\": require(\"./assets/fonts/SpaceMono-Regular.ttf\") */\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hide();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n  //console.disableYellowBox = true;\n  if (!isLoadingComplete && !props.skipLoadingScreen) {\n    return null;\n  } else {\n    return <Application />;\n  }\n};\n\nexport default App;\n","import React, { Component } from \"react\";\nimport { AppState } from \"react-native\";\nimport AppStackNavigator from \"./navigation/Routes\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/ReduxStore\";\nimport { DimensionAction } from \"./redux/actions/DimensionAction\";\nimport {\n  ApolloProvider,\n  ApolloClient,\n  HttpLink,\n  InMemoryCache\n} from \"@apollo/client\";\nimport Background from \"./services/Background\";\n\n//const host = 'http://192.168.1.6';\nconst host = \"http://192.168.1.90\";\n//const host = 'http://localhost';\n\n//Apollo Client Configuration\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  /* ApolloLink.from([\n    onError(({graphQLErrors, networkError}) => {\n      if (graphQLErrors)\n        graphQLErrors.forEach(({message, locations, path}) =>\n          console.log(\n            `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,\n          ),\n        );\n      if (networkError) console.log(`[Network error]: ${networkError}`);\n    }), */\n  link: new HttpLink({\n    uri: host + \":3000/admin/api\",\n    credentials: \"same-origin\"\n  })\n  /* ]), */\n});\n\nclass Application extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      appState: AppState.currentState\n    };\n  }\n\n  componentDidMount() {\n    AppState.addEventListener(\"change\", this.handleAppStateChange);\n  }\n\n  componentWillUnmount() {\n    AppState.removeEventListener(\"change\", this.handleAppStateChange);\n  }\n\n  handleAppStateChange = nextAppState => {\n    this.setState({ appState: nextAppState });\n  };\n\n  render() {\n    return (\n      <Provider store={store}>\n        <ApolloProvider client={client}>\n          <Background />\n          <AppStackNavigator />\n        </ApolloProvider>\n      </Provider>\n    );\n  }\n}\n\nexport default Application;\n","import 'react-native-gesture-handler';\nimport React from 'react';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {createStackNavigator} from '@react-navigation/stack';\nimport CartScreen from '../screens/CartScreen';\nimport BottomTabNavigator from './BottomTabNavigator';\nimport UserScreen from '../screens/UserScreen';\n\nconst Stack = createStackNavigator();\n\nexport default AppStackNavigator = (props) => {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"User\">\n        <Stack.Screen\n          name=\"BottomTabNavigator\"\n          component={BottomTabNavigator}\n        />\n        <Stack.Screen name=\"User\" component={UserScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n","import React from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\n\nexport const MobileLoginBlock = props => {\n  return (\n    <View\n      style={[\n        props.dimensions.window.width < 500\n          ? MobStyles.container\n          : PcStyles.container,\n        ComStyles.container\n      ]}\n    >\n      <View>\n        <Text>SignUP</Text>\n      </View>\n    </View>\n  );\n};\n\nconst ComStyles = StyleSheet.create({\n  container: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    backgroundColor: \"#fff\",\n    borderWidth: 0,\n    borderRadius: 10\n  }\n});\n\nconst MobStyles = StyleSheet.create({\n  container: {\n    width: \"90vw\",\n    height: 150,\n    marginVertical: 20\n  }\n});\n\nconst TabStyles = StyleSheet.create({\n  container: {}\n});\n\nconst PcStyles = StyleSheet.create({\n  container: { width: \"80vw\", height: 150, marginVertical: 20 }\n});\n","import React, {useEffect} from 'react';\nimport {\n  List,\n  ListItem,\n  Thumbnail,\n  Text,\n  Left,\n  Body,\n  Right,\n  View,\n} from 'native-base';\nimport {QuantityView1} from '../common/quantityViews/QuantityView1';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {cartListAction} from '../../redux/actions/CartListAction';\nimport {AddToCart, RemoveFromCart} from '../../services/CartUpdate';\n\nexport default CartItems = (props) => {\n  const cart = useSelector((state) => state.cartReducer.cartList);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    //effect\n    console.log('))-' + JSON.stringify(cart));\n    return () => {\n      //cleanup\n    };\n  });\n\n  return (\n    <View style={{minHeight: '40vh'}}>\n      <List>\n        {cart.map(\n          (item, index) =>\n            item.currQty && (\n              <_ListItem\n                item={item}\n                key={index}\n                cart={cart}\n                dispatch={dispatch}\n              />\n            ),\n        )}\n      </List>\n    </View>\n  );\n};\n\nconst _ListItem = (props) => {\n  const Add = async () => {\n    let r = AddToCart({\n      Product: props.item,\n      Cart: props.cart,\n      Qty: 1,\n    });\n    props.dispatch(cartListAction({cartList: r.cartList}));\n  };\n\n  const Remove = async () => {\n    let r = RemoveFromCart({\n      Cart: props.cart,\n      Qty: 1,\n      ProductName: props.item.ProductName,\n    });\n    props.dispatch(cartListAction({cartList: r.cartList}));\n  };\n  return (\n    <ListItem thumbnail>\n      <View>\n        <Left>\n          <Thumbnail\n            square\n            style={{width: 30, height: 30}}\n            source={{\n              uri:\n                'https://lh3.googleusercontent.com/coMv1dl31PCfEs6essJoEUwVryaqKHKQvENdZ_WYpN-PXa8Qfitkg3grQxIVN22W5A',\n            }}\n          />\n        </Left>\n      </View>\n      <Body>\n        <Text>{props.item.ProductName}</Text>\n        <Text note numberOfLines={1}>\n          Rich Source of Vitamin C...\n        </Text>\n      </Body>\n      <Right>\n        <QuantityView1 qty={props.item.currQty} Add={Add} Remove={Remove} />\n      </Right>\n    </ListItem>\n  );\n};\n\n/* export default CartItems = connect(\n  (state) => ({\n    cart: state.cartReducer.cartList,\n  }),\n  {cartListAction},\n)(Cartitems); */\n","import React from 'react';\nimport {Row, Col, View, Text, Button} from 'native-base';\nimport {FontAwesome} from '@expo/vector-icons';\nimport {TouchableOpacity} from 'react-native-gesture-handler';\n\nexport const QuantityView1 = (props) => {\n  return (\n    <View style={{borderWidth: 1, paddingVertical: 0}}>\n      <Row>\n        <Col>\n          <TouchableOpacity onPress={props.Remove}>\n            <View\n              style={{\n                backgroundColor: '#aaa',\n                paddingHorizontal: 8,\n                paddingVertical: 8,\n                borderRadius: 5,\n              }}>\n              <FontAwesome style={{color: '#fff'}} name=\"minus\" />\n            </View>\n          </TouchableOpacity>\n        </Col>\n        <View\n          style={{\n            paddingHorizontal: 15,\n            justifyContent: 'center',\n          }}>\n          <Text style={{fontSize: 18, fontWeight: 'bold', color: '#aaa'}}>\n            {props.qty ? props.qty : 0}\n          </Text>\n        </View>\n        <Col>\n          <TouchableOpacity onPress={props.Add}>\n            <View\n              style={{\n                backgroundColor: '#aaa',\n                paddingHorizontal: 8,\n                paddingVertical: 8,\n                borderRadius: 5,\n              }}>\n              <FontAwesome style={{color: '#fff'}} name=\"plus\" />\n            </View>\n          </TouchableOpacity>\n        </Col>\n      </Row>\n    </View>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { View, Text } from \"react-native\";\nimport { Row, Col } from \"native-base\";\nimport { Checkout } from \"./Checkout\";\n\nconst Cartinfo = props => {\n  const [Price, setPrice] = useState(0);\n  const [Charges, setCharges] = useState(0);\n  const [Total, setTotal] = useState(0);\n\n  useEffect(() => {\n    //effect\n    let P = 0;\n    props.cart.map((item, index) => {\n      P = item.currQty * item.Price + P;\n    });\n    setPrice(P);\n    if (P > 20) setCharges(20);\n    else if (P <= 20) setCharges(0);\n    return () => {\n      //cleanup\n    };\n  });\n  return (\n    <View\n      style={[\n        ComStyles.container,\n        props.dimensions.window.width < 500\n          ? MobStyles.container\n          : PcStyles.container\n      ]}\n    >\n      <View\n        style={[\n          ComStyles.container2,\n          props.dimensions.window.width < 500\n            ? MobStyles.container2\n            : PcStyles.container2\n        ]}\n      >\n        <AddressSection dimensions={props.dimensions} cart={props.cart} />\n        <AmountSection\n          dimensions={props.dimensions}\n          cart={props.cart}\n          Price={Price}\n          Charges={Charges}\n        />\n      </View>\n      <Checkout Price={Price} />\n    </View>\n  );\n};\n\nconst AddressSection = props => {\n  return (\n    <View\n      style={[\n        ComStyles.AddressSection,\n        props.dimensions.window.width < 500\n          ? MobStyles.AddressSection\n          : PcStyles.AddressSection\n      ]}\n    >\n      <View\n        style={{\n          borderWidth: 0,\n          borderRadius: 10,\n          padding: 10\n        }}\n      >\n        <Row>\n          <Col>\n            <Text style={[ComStyles.Text]}>Delivery Address</Text>\n            <Text style={[ComStyles.Text, { fontSize: 8, fontWeight: \"600\" }]}>\n              Tap Here to change address\n            </Text>\n          </Col>\n          <Col>\n            <Row>\n              <Text style={[ComStyles.Text]}>Paras Tierea, sector 137</Text>\n            </Row>\n            <Row style={{ marginVertical: 10 }}>\n              <Text style={[ComStyles.Text]}>Noida, UP, 201501</Text>\n            </Row>\n          </Col>\n        </Row>\n        <Row style={{ backgroundColor: \"#fff\" }}>\n          <Col style={{ flex: 1 }}>\n            <Text style={[ComStyles.Text, {}]}>Delivery Instructions</Text>\n          </Col>\n          <Col style={{ flex: 1.2 }}>\n            <View\n              style={{\n                width: \"100%\",\n                height: 50,\n                backgroundColor: \"#eee\",\n                borderRadius: 5,\n                margin: 5\n              }}\n            ></View>\n          </Col>\n        </Row>\n      </View>\n    </View>\n  );\n};\n\nconst AmountSection = props => {\n  return (\n    <View\n      style={[\n        ComStyles.AmountSection,\n        props.dimensions.window.width < 500\n          ? MobStyles.AmountSection\n          : PcStyles.AmountSection\n      ]}\n    >\n      <View style={{ width: \"100%\", height: \"100%\", borderWidth: 0 }}>\n        <View style={[ComStyles.AmountRow]}>\n          <Col style={ComStyles.AmountCol1}>\n            <Text style={{ fontSize: 16, fontWeight: \"600\", color: \"#aaa\" }}>\n              Cart Price\n            </Text>\n          </Col>\n          <Col style={ComStyles.AmountCol2}>\n            <Text style={{ fontSize: 16, fontWeight: \"600\", color: \"#aaa\" }}>\n              {props.Price ? props.Price : 0}\n            </Text>\n          </Col>\n        </View>\n        <View style={[ComStyles.AmountRow, { display: \"none\" }]}>\n          <Col style={ComStyles.AmountCol1}>\n            <Text style={{ fontSize: 14, fontWeight: \"400\", color: \"#0a0\" }}>\n              You Save\n            </Text>\n          </Col>\n          <Col style={ComStyles.AmountCol2}>\n            <Text style={{ fontSize: 14, fontWeight: \"400\", color: \"#0a0\" }}>\n              20\n            </Text>\n          </Col>\n        </View>\n        <View style={ComStyles.AmountRow}>\n          <Col style={ComStyles.AmountCol1}>\n            <Text style={{ fontSize: 14, fontWeight: \"400\", color: \"#a00\" }}>\n              Service % Tax Charge\n            </Text>\n          </Col>\n          <Col style={ComStyles.AmountCol2}>\n            <Text style={{ fontSize: 14, fontWeight: \"400\", color: \"#a00\" }}>\n              {props.Charges ? props.Charges : 0}\n            </Text>\n          </Col>\n        </View>\n        <View style={[ComStyles.AmountRow, { paddingVertical: 10 }]}>\n          <Col style={ComStyles.AmountCol1}>\n            <Text style={{ color: \"#aaa\", fontSize: 18, fontWeight: \"600\" }}>\n              Payable Amount\n            </Text>\n          </Col>\n          <Col style={ComStyles.AmountCol2}>\n            <Text style={{ color: \"#aaa\", fontSize: 18, fontWeight: \"600\" }}>\n              {props.Charges + props.Price}\n            </Text>\n          </Col>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nimport { StyleSheet } from \"react-native\";\n\nconst ComStyles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#fff\",\n    borderWidth: 0,\n    borderRadius: 10,\n    alignSelf: \"center\",\n    marginVertical: 20\n  },\n  container2: {\n    display: \"flex\"\n  },\n  AddressSection: {},\n  AmountRow: { display: \"flex\", flexDirection: \"row\", paddingVertical: 5 },\n  AmountCol1: {\n    marginLeft: 10,\n    flex: 3,\n    borderWidth: 0\n  },\n  AmountCol2: { alignItems: \"flex-end\", marginRight: 20 },\n  Text: {\n    color: \"#aaa\"\n  }\n});\n\nconst MobStyles = StyleSheet.create({\n  container: {\n    width: \"90vw\"\n  },\n  container2: {\n    flexDirection: \"column-reverse\"\n  },\n  AddressSection: { flex: 1 },\n  AmountSection: { flex: 1 }\n});\n\nconst TabStyles = StyleSheet.create({\n  container: {}\n});\n\nconst PcStyles = StyleSheet.create({\n  container: {\n    width: \"80vw\"\n  },\n  container2: {\n    flexDirection: \"row\"\n  },\n  AddressSection: { flex: 1.3 },\n  AmountSection: { flex: 1 }\n});\n\nimport { connect } from \"react-redux\";\n\nexport default CartInfo = connect(state => ({\n  cart: state.cartReducer.cartList\n}))(Cartinfo);\n","import React, { useState, useEffect } from \"react\";\nimport { View, Text } from \"react-native\";\n\nexport const Checkout = props => {\n  const [checkOutText, setCheckOutText] = useState(\"CHECKOUT\");\n\n  useEffect(() => {\n    //effect\n    setCheckOutText(\n      props.Price > 0 ? \"PROCEED TO CHECKOUT\" : \"ADD ITEMS TO CART\"\n    );\n    return () => {\n      //cleanup\n    };\n  });\n  return (\n    <View>\n      <View\n        style={{\n          width: \"100%\",\n          alignItems: \"center\",\n          height: 40,\n          justifyContent: \"center\"\n        }}\n      >\n        <Text style={{ color: \"#aaa\", fontWeight: \"500\" }}>\n          I accept the Terms and Conditions prior Ordering\n        </Text>\n      </View>\n      <View\n        style={{\n          width: \"100%\",\n          height: 35,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          backgroundColor: \"#0a0\",\n          borderBottomLeftRadius: 10,\n          borderBottomRightRadius: 10,\n          shadowColor: \"#000\",\n          shadowOffset: {\n            width: 0,\n            height: 5\n          },\n          shadowOpacity: 0.34,\n          shadowRadius: 6.27,\n\n          elevation: 10\n        }}\n      >\n        <Text style={{ color: \"#fff\", fontWeight: \"bold\", fontSize: 20 }}>\n          {checkOutText}\n        </Text>\n      </View>\n    </View>\n  );\n};\n","import React, {useEffect} from 'react';\nimport {View, Text, TouchableOpacity} from 'react-native';\nimport {createBottomTabNavigator} from '@react-navigation/bottom-tabs';\nimport TabBarIcon from '../../components/TabBarIcon';\nimport LinksScreen from '../screens/LinksScreen';\nimport {Button, Icon, Row} from 'native-base';\nimport StoreNavigation from './StoreNavigation';\nimport {connect} from 'react-redux';\nimport CartScreen from '../screens/CartScreen';\nimport {Thumbnail} from 'native-base';\n\nconst BottomTab = createBottomTabNavigator();\nconst INITIAL_ROUTE_NAME = 'Home';\n\nconst bottomTabNavigator = (props) => {\n  const {navigation, route} = props;\n\n  navigation.setOptions({\n    headerTitle: (props) => (\n      <View style={{paddingRight: 5}}>\n        <Row>\n          <Text style={{fontWeight: 'bold', fontSize: 20, color: '#7a0'}}>\n            KickFresh\n          </Text>\n        </Row>\n        <Row>\n          <Text style={{color: '#aaa'}}>Store to Your Door</Text>\n        </Row>\n      </View>\n    ),\n    headerRight: () => (\n      <View style={{flexDirection: 'row'}}>\n        <TouchableOpacity\n          onPress={() => {\n            console.log('USERSCREEN');\n            props.navigation.navigate('User');\n          }}\n          style={{\n            height: '100%',\n            backgroundColor: '#fff',\n            alignItems: 'center',\n            paddingHorizontal: 15,\n            flexDirection: 'row',\n          }}>\n          <Thumbnail\n            style={{width: 30, height: 30, display: 'none'}}\n            source={{\n              uri:\n                'https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885_960_720.jpg',\n            }}\n          />\n          <Text\n            style={{color: '#aaa', fontWeight: '600', paddingHorizontal: 5}}>\n            SignIN To Order\n          </Text>\n        </TouchableOpacity>\n        <Button\n          transparent\n          onPress={() => {\n            navigation.navigate('Cart');\n          }}>\n          <View\n            style={{\n              justifyContent: 'center',\n              paddingHorizontal: 10,\n              borderWidth: 0,\n            }}>\n            <View\n              style={{\n                position: 'absolute',\n                top: -10,\n                right: 14,\n              }}>\n              <Text style={{color: '#aaa', fontWeight: 'bold'}}>\n                {props.cart.length ? props.cart.length : 0}\n              </Text>\n            </View>\n            <Icon name=\"cart\" style={{color: '#7a0'}} />\n          </View>\n        </Button>\n      </View>\n    ),\n  });\n\n  useEffect(() => {\n    //effect\n    return () => {\n      //cleanup\n    };\n  });\n\n  return (\n    <BottomTab.Navigator initialRouteName={INITIAL_ROUTE_NAME}>\n      <BottomTab.Screen\n        name=\"StoreNavigation\"\n        component={StoreNavigation}\n        options={{\n          title: 'StoreNavigation',\n          tabBarIcon: ({focused}) => (\n            <TabBarIcon focused={focused} name=\"md-code-working\" />\n          ),\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Subscriptions\"\n        component={LinksScreen}\n        options={{\n          title: 'Subscriptions',\n          tabBarIcon: ({focused}) => (\n            <TabBarIcon focused={focused} name=\"md-book\" />\n          ),\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Cart\"\n        component={CartScreen}\n        options={{\n          title: 'Cart',\n          tabBarIcon: ({focused}) => (\n            <TabBarIcon focused={focused} name=\"md-book\" />\n          ),\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n};\n\nfunction getHeaderTitle(route) {\n  const routeName =\n    route.state?.routes[route.state.index]?.name ?? INITIAL_ROUTE_NAME;\n\n  switch (routeName) {\n    case 'Home':\n      return 'FreshKick';\n    case 'Links':\n      return 'Links to learn more';\n  }\n}\n\nexport default BottomTabNavigator = connect((state) => ({\n  cart: state.cartReducer.cartList,\n}))(bottomTabNavigator);\n","import { Ionicons } from '@expo/vector-icons';\nimport * as React from 'react';\n\nimport Colors from '../constants/Colors';\n\nexport default function TabBarIcon(props) {\n  return (\n    <Ionicons\n      name={props.name}\n      size={30}\n      style={{ marginBottom: -3 }}\n      color={props.focused ? Colors.tabIconSelected : Colors.tabIconDefault}\n    />\n  );\n}\n","const tintColor = '#2f95dc';\n\nexport default {\n  tintColor,\n  tabIconDefault: '#ccc',\n  tabIconSelected: tintColor,\n  tabBar: '#fefefe',\n  errorBackground: 'red',\n  errorText: '#fff',\n  warningBackground: '#EAEB5E',\n  warningText: '#666804',\n  noticeBackground: tintColor,\n  noticeText: '#fff',\n};\n","import * as React from 'react';\nimport {StyleSheet, Text, View} from 'react-native';\n\nexport default function LinksScreen() {\n  return (\n    <View>\n      <Text>Link Screen</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fafafa',\n  },\n});\n","import React from 'react';\nimport {createStackNavigator} from '@react-navigation/stack';\nimport HomeScreen from '../comp/homescreencomp/HomeScreen';\nimport SubCategory from '../comp/homescreencomp/subcategory/SubCategory';\n\nconst Stack = createStackNavigator();\n\nexport default StoreNavigation = (props) => {\n  return (\n    <Stack.Navigator initialRouteName=\"StoreHome\">\n      <Stack.Screen name=\"StoreHome\" component={HomeScreen} />\n      <Stack.Screen name=\"SubCategory\" component={SubCategory} />\n    </Stack.Navigator>\n  );\n};\n","import React, {useState, useEffect} from 'react';\nimport {StyleSheet, Text, View, Dimensions, ScrollView} from 'react-native';\nimport TrendingRow from './TrendingRow';\nimport {connect} from 'react-redux';\n//import { useFocusEffect } from \"@react-navigation/core\";\nimport BannerRow from './BannerRow';\nimport CategoryList from './category/CategoryList';\nimport SearchBar from '../common/SearchBar';\n\nconst window = Dimensions.get('window');\nconst screen = Dimensions.get('screen');\n\nconst Homescreen = (props) => {\n  const [dimensions, setDimensions] = useState({window, screen});\n\n  props.navigation.setOptions({headerShown: false});\n\n  const onDimensionChange = ({window, screen}) => {\n    setDimensions({window, screen});\n  };\n\n  useEffect(() => {\n    Dimensions.addEventListener('change', onDimensionChange);\n    return () => {\n      Dimensions.removeEventListener('change', onDimensionChange);\n    };\n  });\n  return (\n    <ScrollView style={{backgroundColor: '#fff'}}>\n      <View\n        style={[\n          dimensions.window.width < 500\n            ? MobStyles.container\n            : PcStyles.container,\n          ComStyles.container,\n        ]}>\n        <BannerRow navigation={props.navigation} />\n        <View\n          style={[\n            ComStyles.TrendingRow,\n            dimensions.window.width < 500\n              ? MobStyles.TrendingRow\n              : PcStyles.TrendingRow,\n          ]}>\n          <TrendingRow navigation={props.navigation} />\n        </View>\n        <View\n          style={[\n            ComStyles.SearchBar,\n            dimensions.window.width < 500\n              ? MobStyles.SearchBar\n              : PcStyles.SearchBar,\n          ]}>\n          <SearchBar dimensions={dimensions} />\n        </View>\n        <View\n          style={[\n            ComStyles.CategoryList,\n            dimensions.window.width < 500\n              ? MobStyles.CategoryList\n              : PcStyles.CategoryList,\n          ]}>\n          <CategoryList navigation={props.navigation} dimensions={dimensions} />\n        </View>\n      </View>\n    </ScrollView>\n  );\n};\n\nHomescreen.navigationOptions = {\n  header: null,\n};\n\nconst ComStyles = StyleSheet.create({\n  container: {\n    borderWidth: 0,\n  },\n  TrendingRow: {borderWidth: 0},\n  CategoryList: {},\n  SearchBar: {},\n});\n\nconst MobStyles = StyleSheet.create({\n  container: {},\n  TrendingRow: {padding: 15},\n  CategoryList: {marginHorizontal: '2vw'},\n  SearchBar: {marginHorizontal: '3vw', borderRadius: 5, overflow: 'hidden'},\n});\n\nconst TabStyles = StyleSheet.create({\n  container: {},\n  TrendingRow: {},\n  CategoryList: {},\n  SearchBar: {},\n});\n\nconst PcStyles = StyleSheet.create({\n  container: {marginHorizontal: 50},\n  TrendingRow: {},\n  CategoryList: {},\n  SearchBar: {},\n});\n\nexport default HomeScreen = connect((state) => ({\n  istate: state.cartReducer.cartList,\n}))(Homescreen);\n","import React, {useState} from 'react';\nimport {View, Text, StyleSheet, FlatList} from 'react-native';\nimport ItemType1 from '../common/itemViews/ItemType1';\nimport {useQuery} from '@apollo/client';\nimport {gql_trendingProducts} from '../../services/gqls';\n\nexport default TrendingRow = (props) => {\n  const {loading, error, data} = useQuery(gql_trendingProducts);\n  _data = [\n    {ProductName: 'p1'},\n    {ProductName: 'p1'},\n    {ProductName: 'p1'},\n    {ProductName: 'p1'},\n  ];\n\n  if (loading || error)\n    return (\n      <View style={styles.container}>\n        <Text\n          style={{\n            color: '#aaa',\n            fontWeight: 'bold',\n            fontSize: 20,\n            marginTop: 10,\n            marginLeft: 5,\n          }}>\n          Trending Products\n        </Text>\n\n        <View>\n          <FlatList\n            horizontal\n            showsHorizontalScrollIndicator={false}\n            data={_data}\n            keyExtractor={(item, index) => 'key' + index}\n            renderItem={({item, index}) => {\n              return <ItemType1 item={item} />;\n            }}\n          />\n        </View>\n      </View>\n    );\n\n  return (\n    <View style={styles.container}>\n      <Text\n        style={{\n          color: '#aaa',\n          fontWeight: 'bold',\n          fontSize: 20,\n          marginTop: 10,\n          marginLeft: 5,\n        }}>\n        Trending Products\n      </Text>\n\n      <View>\n        <FlatList\n          horizontal\n          showsHorizontalScrollIndicator={false}\n          data={data.allProducts}\n          keyExtractor={(item, index) => 'key' + index}\n          renderItem={({item, index}) => {\n            return <ItemType1 item={item} />;\n          }}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n  },\n  head: {\n    justifyContent: 'center',\n  },\n});\n","import React, {useState} from 'react';\nimport {View, StyleSheet, Text, TouchableOpacity} from 'react-native';\nimport {FontAwesome} from '@expo/vector-icons';\n\nexport default AddView = (props) => {\n  const add = () => {\n    props.Add();\n  };\n  const remove = () => {\n    props.Remove();\n  };\n\n  if (props.Quantity) {\n    return (\n      <View style={styles.container}>\n        <View style={styles.ItemAddView}>\n          <View style={styles.RemoveButton}>\n            <FontAwesome\n              name=\"minus\"\n              style={[, {color: '#fff', fontSize: 14}]}\n              onPress={remove}\n            />\n          </View>\n          <View style={styles.centerText}>\n            <Text style={styles.amountText}>{props.Quantity}</Text>\n          </View>\n          <View style={styles.AddButton}>\n            <FontAwesome\n              name=\"plus\"\n              style={[, {color: '#fff', fontSize: 14}]}\n              onPress={add}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  } else {\n    return (\n      <TouchableOpacity onPress={add}>\n        <View style={styles.container}>\n          <View\n            style={{\n              flex: 3.5,\n              backgroundColor: '#af0',\n              alignItems: 'center',\n              justifyContent: 'center',\n              paddingVertical: 3,\n            }}>\n            <Text style={{color: '#fff', fontSize: 18, fontWeight: 'bold'}}>\n              ADD\n            </Text>\n          </View>\n          <View\n            style={{\n              flex: 1.5,\n              backgroundColor: '#0f9',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}>\n            <FontAwesome\n              name=\"plus\"\n              style={{\n                color: '#fff',\n                fontSize: 18,\n              }}\n            />\n          </View>\n        </View>\n      </TouchableOpacity>\n    );\n  }\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 3,\n    width: '100%',\n    flex: 1,\n    flexDirection: 'row',\n    borderRadius: 80,\n    overflow: 'hidden',\n  },\n  itemImage: {\n    height: '70%',\n    borderWidth: 0,\n    borderColor: '#0f0',\n  },\n  ItemAddView: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 0,\n    borderColor: '#f00',\n    paddingVertical: 2,\n  },\n  AddButton: {\n    width: 22,\n    height: 22,\n    backgroundColor: '#0a0',\n    padding: 2,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 0,\n    borderRadius: 4,\n  },\n  RemoveButton: {\n    width: 22,\n    height: 22,\n    backgroundColor: '#0a0',\n    padding: 2,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 0,\n    borderRadius: 4,\n  },\n  centerText: {\n    flex: 0.8,\n    justifyContent: 'center',\n    alignContent: 'center',\n    borderWidth: 0,\n  },\n  amountText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    color: '#aaa',\n  },\n  button: {\n    backgroundColor: 'transparent',\n  },\n});\n","import React, { useState, useEffect } from \"react\";\nimport { View, Text, Dimensions } from \"react-native\";\nimport Carousel from \"react-native-snap-carousel\";\n\nlet carouselItems = [\n  {\n    title: \"Item 1\",\n    text: \"Text 1\"\n  },\n  {\n    title: \"Item 2\",\n    text: \"Text 2\"\n  },\n  {\n    title: \"Item 3\",\n    text: \"Text 3\"\n  },\n  {\n    title: \"Item 4\",\n    text: \"Text 4\"\n  },\n  {\n    title: \"Item 5\",\n    text: \"Text 5\"\n  }\n];\n\nconst window = Dimensions.get(\"window\");\nconst screen = Dimensions.get(\"screen\");\n\nexport default BannerRow = props => {\n  const [dimensions, setDimensions] = useState({ window, screen });\n\n  const onChange = ({ window, screen }) => {\n    setDimensions({ window, screen });\n  };\n  useEffect(() => {\n    Dimensions.addEventListener(\"change\", onChange);\n    return () => {\n      Dimensions.removeEventListener(\"change\", onChange);\n    };\n  });\n  return (\n    <View\n      style={{\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }}\n    >\n      <Carousel\n        layout={\"default\"}\n        ref={ref => (this.carousel = ref)}\n        data={carouselItems}\n        sliderWidth={dimensions.window.width}\n        itemWidth={dimensions.window.width}\n        renderItem={_renderItem}\n        //useNativeDriver={false}\n        //onSnapToItem = { index => this.setState({activeIndex:index}) }\n      />\n    </View>\n  );\n};\n\n_renderItem = ({ item, index }) => {\n  return (\n    <View\n      style={{\n        backgroundColor: \"floralwhite\",\n        borderRadius: 5,\n        height: 250,\n        padding: 50,\n        marginLeft: 25,\n        marginRight: 25\n      }}\n    >\n      <Text style={{ fontSize: 30 }}>{item.title}</Text>\n      <Text>{item.text}</Text>\n    </View>\n  );\n};\n"],"sourceRoot":""}