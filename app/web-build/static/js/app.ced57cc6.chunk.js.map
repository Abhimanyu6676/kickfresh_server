{"version":3,"sources":["src/navigation/useLinking.js","src/redux/ReduxConstants.js","web-build/register-service-worker.js","App.js","src/Application.js","src/navigation/Routes.js","src/screens/CartScreen.js","src/comp/cartComp/MobileLoginBlock.js","src/comp/cartComp/CartList.js","src/comp/cartComp/CartItem.js","src/comp/common/QuantityView1.js","src/navigation/BottomTabNavigator.js","components/TabBarIcon.js","constants/Colors.js","src/screens/HomeScreen.js","src/comp/FlatRow.js","src/comp/ItemType1.js","src/comp/BannerRow.js","src/comp/homescreencomp/CategoryList.js","src/screens/LinksScreen.js","src/redux/ReduxStore.js","src/redux/reducers/CartListReducer.js","src/redux/reducers/DimensionReducer.js","src/redux/actions/DimensionAction.js"],"names":["containerRef","useLinking","prefixes","Linking","makeUrl","config","Root","path","screens","Home","Links","Settings","CART_LIST","DIMENSION","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","props","React","useState","isLoadingComplete","setLoadingComplete","setInitialNavigationState","useRef","getInitialState","useEffect","async","SplashScreen","preventAutoHide","Font","loadAsync","warn","hide","skipLoadingScreen","client","ApolloClient","cache","InMemoryCache","link","HttpLink","uri","credentials","handleAppStateChange","nextAppState","setState","appState","state","AppState","currentState","this","removeEventListener","Provider","store","ApolloProvider","Component","Stack","createStackNavigator","NavigationContainer","Navigator","initialRouteName","Screen","name","component","BottomTabNavigator","CartScreen","navigation","route","setOptions","headerTitle","View","style","paddingRight","Row","Text","fontWeight","fontSize","color","headerRight","Container","justifyContent","paddingHorizontal","borderWidth","Thumbnail","padding","source","log","Cookies","get","getAllProducts","MobileLoginBlock","CartList","Promise","resolve","reject","axios","timeout","response","c","status","data","screen","dimensions","setDimensions","onChange","Dimensions","width","MobStyles","container","PcStyles","ComStyles","StyleSheet","create","alignItems","backgroundColor","borderRadius","margin","height","alignSelf","CartItem","list","Name","qty","Content","List","map","item","index","_ListItem","ListItem","thumbnail","key","Left","square","Body","note","numberOfLines","Right","QuantityView1","onPlus","onMinus","paddingVertical","Col","TouchableOpacity","onPress","FontAwesome","Button","transparent","navigate","Icon","BottomTab","HomeScreen","options","title","tabBarIcon","focused","LinksScreen","createBottomTabNavigator","Ionicons","size","marginBottom","Colors","tabIconSelected","tabIconDefault","tintColor","tabBar","errorBackground","errorText","warningBackground","warningText","noticeBackground","noticeText","Homescreen","onDimensionChange","JSON","stringify","ScrollView","navigationOptions","header","marginHorizontal","connect","istate","Timer","styles","marginLeft","head","marginTop","FlatList","horizontal","showsHorizontalScrollIndicator","keyExtractor","renderItem","AddView","quantity","setQuantity","add","ItemAddView","RemoveButton","centerText","amountText","AddButton","flex","flexDirection","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","marginVertical","overflow","itemImage","borderColor","alignContent","textAlign","button","carouselItems","text","BannerRow","layout","ref","carousel","sliderWidth","itemWidth","_renderItem","marginRight","getVendorQuery","gql","useQuery","loading","message","allReducers","combineReducers","cartReducer","DimensionReducer","createStore","initialState","cartList","action","type","reduxConstants","Dimension"],"mappings":"qIAGe,SAASA,GACtB,OAAO,IAAAC,YAAWD,EAAc,CAC9BE,SAAU,CAACC,UAAQC,QAAQ,MAC3BC,OAAQ,CACNC,KAAM,CACJC,KAAM,OACNC,QAAS,CACPC,KAAM,OACNC,MAAO,QACPC,SAAU,iBAZpB,YACA,U,4GCD8B,CAC5BC,UAAW,YACXC,UAAW,c,+DCAT,kBAAmBC,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cACPC,SAAS,0BAA2B,CAAEC,MAAO,MAC7CC,MAAK,SAASC,OAGdC,OAAM,SAASC,GACdC,QAAQH,KAAK,oCAAqCE,U,kICH1D,UACA,YACA,SACA,YACA,a,EAEY,SAAAE,GAAU,IAAD,EAC6BC,UAAMC,UAAS,GAD5C,qBACZC,EADY,KACOC,EADP,OAEyCH,UAAMC,WAF/C,qBAEYG,GAFZ,WAGb9B,EAAe0B,UAAMK,SACnBC,GAAoB,aAAWhC,GAA/BgC,gBA4BR,OAzBA,IAAAC,YAAU,WACR,UAAAC,OAAA,gEAEIC,eAAaC,kBAFjB,KAKIN,EALJ,yBAKoCE,KALpC,kEAQUK,EAAKC,UAAU,KARzB,yDAcId,QAAQe,KAAR,MAdJ,yBAgBIV,GAAmB,GACnBM,eAAaK,OAjBjB,sFAsBC,IAEEZ,GAAsBH,EAAMgB,kBAGxB,wBAAC,UAAD,MAFA,M,6KC9CX,UACA,OACA,YACA,SACA,SAEA,GADA,OACA,Q,4PAQA,IAAMC,EAAS,IAAIC,eAAa,CAC9BC,MAAO,IAAIC,gBAWXC,KAAM,IAAIC,WAAS,CACjBC,IAAK,qCACLC,YAAa,kB,gOAMf,WAAYxB,GAAQ,IAAD,+BACjB,cAAMA,IAcRyB,qBAAuB,SAACC,GACtB,EAAKC,SAAS,CAACC,SAAUF,KAdzB,EAAKG,MAAQ,CACXD,SAAUE,WAASC,cAHJ,E,iEAQjBD,WAASvC,iBAAiB,SAAUyC,KAAKP,wB,6CAIzCK,WAASG,oBAAoB,SAAUD,KAAKP,wB,+BAQ5C,OACE,wBAAC,EAAAS,SAAD,CAAUC,MAAOA,SACf,wBAAC,EAAAC,eAAD,CAAgBnB,OAAQA,GACtB,wBAAC,UAAD,Y,GAxBgBoB,a,8GCjC1B,MACA,cACA,QACA,SACA,YACA,YAEMC,GAAQ,IAAAC,wB,EAEY,SAAAvC,GACxB,OACE,wBAAC,EAAAwC,oBAAD,KACE,wBAACF,EAAMG,UAAP,CAAiBC,iBAAiB,QAChC,wBAACJ,EAAMK,OAAP,CAAcC,KAAK,OAAOC,UAAWC,YACrC,wBAACR,EAAMK,OAAP,CAAcC,KAAK,OAAOC,UAAWE,e,8GCN9B,YAA4C,IAAtBC,EAAqB,EAArBA,WAAqB,EAATC,MAC/CD,EAAWE,WAAW,CACpBC,YAAa,SAAAnD,GAAK,OAChB,wBAAC,EAAAoD,KAAD,CAAMC,MAAO,CAAEC,aAAc,IAC3B,wBAAC,EAAAC,IAAD,KACE,wBAAC,EAAAC,KAAD,CAAMH,MAAO,CAAEI,WAAY,OAAQC,SAAU,GAAIC,MAAO,SAAxD,SAIF,wBAAC,EAAAJ,IAAD,KACE,wBAAC,EAAAC,KAAD,CAAMH,MAAO,CAAEM,MAAO,SAAtB,uBACsB,wBAAC,EAAAH,KAAD,CAAMH,MAAO,CAAEM,MAAO,SAAtB,cAK5BC,YAAa,kBACX,wBAAC,EAAAC,UAAD,CACER,MAAO,CACLS,eAAgB,SAChBC,kBAAmB,GACnBC,YAAa,IAGf,wBAAC,EAAAC,UAAD,CACEZ,MAAO,CAAEa,QAAS,IAClBC,OAAQ,CACN5C,IACE,gFA5B4C,MAmC5BtB,UAAMC,SAAS,MAnCa,+BA+CxD,OAVA,IAAAM,YAAU,WAKR,OAHAT,QAAQqE,IAAIC,UAAQC,IAAI,iBACxBvE,QAAQqE,IAAI,yBACZG,IACO,gBAMP,wBAAC,EAAAnB,KAAD,KACE,wBAAC,EAAAoB,iBAAD,MACA,wBAAC,EAAAC,SAAD,Q,0BA1DN,UACA,OACA,QACA,SACA,SACA,YACA,YAyDA,IAAMF,EAAiB,4BAAA9D,OAAA,yEACd,IAAIiE,SAAQ,SAAOC,EAASC,GAAhB,iBAAAnE,OAAA,gFACXoE,UACHP,IACC,yBACA,GACA,CACEQ,QAAS,MAGZnF,MAAK,SAAAoF,GACJ,IAAIC,EAAIX,UAAQC,IAAI,QACpBvE,QAAQqE,IAAI,iBAAmBY,GAE/BjF,QAAQqE,IACN,qCAEEW,EAASE,OACT,kBACAF,EAASG,MAEbP,EAAQI,MAGTlF,OAAM,SAAAC,GACLC,QAAQqE,IAAI,eAAgBtE,GAC5B8E,EAAO9E,OAzBM,gEADE,8D,gIC/DvB,UACA,O,mBAEgC,SAACE,GAAW,IAAD,GACL,IAAAE,UAAS,CAACZ,cAAQ6F,gBADb,qBAClCC,EADkC,KACtBC,EADsB,KAGnCC,EAAW,SAAC,GAAsB,IAArBhG,EAAoB,EAApBA,OAAQ6F,EAAY,EAAZA,OACzBpF,QAAQqE,IAAIgB,GACZC,EAAc,CAAC/F,SAAQ6F,YAYzB,OATA,IAAA3E,YAAU,WAGR,OADA+E,aAAWhG,iBAAiB,SAAU+F,GAC/B,WAELC,aAAWtD,oBAAoB,SAAUqD,MAE1C,IAGD,wBAAC,EAAAlC,KAAD,CACEC,MAAO,CACL+B,EAAW9F,OAAOkG,MAAQ,IACtBC,EAAUC,UACVC,EAASD,UACbE,EAAUF,YAEZ,wBAAC,EAAAtC,KAAD,KACE,wBAAC,EAAAI,KAAD,kBAMR,IAAMoC,EAAYC,aAAWC,OAAO,CAClCJ,UAAW,CACT5B,eAAgB,SAChBiC,WAAY,SACZC,gBAAiB,OACjBhC,YAAa,EACbiC,aAAc,MAIZR,EAAYI,aAAWC,OAAO,CAClCJ,UAAW,CACTQ,OAAQ,MACRV,MAAO,OACPW,OAAQ,OACRF,aAAc,MAQZN,GAJYE,aAAWC,OAAO,CAClCJ,UAAW,KAGIG,aAAWC,OAAO,CACjCJ,UAAW,CACTQ,OAAQ,MACRV,MAAO,OACPW,OAAQ,OACRF,aAAc,Q,kGC/DlB,cACA,OACA,S,WAEwB,WACtB,OACE,wBAAC,EAAA7C,KAAD,CAAMC,MAAO,CAAE6C,OAAQ,MAAOlC,YAAa,IACzC,wBAAC,EAAAR,KAAD,CAAMH,MAAO,CAAEM,MAAO,OAAQD,SAAU,GAAI0C,UAAW,WAAvD,iCAGA,wBAAC,EAAAC,SAAD,S,kGCVN,cACA,QAgBA,SAEIC,EAAO,CACT,CAAEC,KAAM,UAAWC,IAAK,GACxB,CAAED,KAAM,QAASC,IAAK,GACtB,CAAED,KAAM,QAASC,IAAK,GACtB,CAAED,KAAM,QAASC,IAAK,I,WAGA,WACtB,OACE,wBAAC,EAAA3C,UAAD,KACE,wBAAC,EAAA4C,QAAD,KACE,wBAAC,EAAAC,KAAD,KACGJ,EAAKK,KAAI,SAACC,EAAMC,GAAP,OACR,wBAACC,UAAD,CAAWF,KAAMA,EAAMC,MAAOA,WAQ1CC,UAAY,SAAA9G,GACV,OACE,wBAAC,EAAA+G,SAAD,CAAUC,WAAS,EAACC,IAAKjH,EAAM6G,OAC7B,wBAAC,EAAAzD,KAAD,KACE,wBAAC,EAAA8D,KAAD,KACE,wBAAC,EAAAjD,UAAD,CACEkD,QAAM,EACN9D,MAAO,CAAEmC,MAAO,GAAIW,OAAQ,IAC5BhC,OAAQ,CACN5C,IACE,4GAKV,wBAAC,EAAA6F,KAAD,KACE,wBAAC,EAAA5D,KAAD,KAAOxD,EAAM4G,KAAKL,MAClB,wBAAC,EAAA/C,KAAD,CAAM6D,MAAI,EAACC,cAAe,GAA1B,gCAIF,wBAAC,EAAAC,MAAD,KACE,wBAAC,EAAAC,cAAD,CAAehB,IAAKxG,EAAM4G,KAAKJ,IAAKiB,OAAQA,OAAQC,QAASA,aAMrED,OAAS,SAAAzH,GACPD,QAAQqE,IAAI,YAGdsD,QAAU,SAAA1H,GACRD,QAAQqE,IAAI,c,uGCzEd,cACA,QACA,SACA,Q,gBAE6B,SAAApE,GAC3B,OACE,wBAAC,EAAAoD,KAAD,CAAMC,MAAO,CAAEW,YAAa,EAAG2D,gBAAiB,IAC9C,wBAAC,EAAApE,IAAD,KACE,wBAAC,EAAAqE,IAAD,KACE,wBAAC,EAAAC,iBAAD,CAAkBC,QAAS9H,EAAM0H,SAC/B,wBAAC,EAAAtE,KAAD,CACEC,MAAO,CACL2C,gBAAiB,OACjBjC,kBAAmB,EACnB4D,gBAAiB,EACjB1B,aAAc,IAGhB,wBAAC,EAAA8B,YAAD,CAAa1E,MAAO,CAAEM,MAAO,QAAUf,KAAK,aAIlD,wBAAC,EAAAQ,KAAD,CACEC,MAAO,CACLU,kBAAmB,GACnBD,eAAgB,WAGlB,wBAAC,EAAAN,KAAD,CAAMH,MAAO,CAAEK,SAAU,GAAID,WAAY,OAAQE,MAAO,SACrD3D,EAAMwG,IAAMxG,EAAMwG,IAAM,IAG7B,wBAAC,EAAAoB,IAAD,KACE,wBAAC,EAAAC,iBAAD,CAAkBC,QAAS9H,EAAMyH,QAC/B,wBAAC,EAAArE,KAAD,CACEC,MAAO,CACL2C,gBAAiB,OACjBjC,kBAAmB,EACnB4D,gBAAiB,EACjB1B,aAAc,IAGhB,wBAAC,EAAA8B,YAAD,CAAa1E,MAAO,CAAEM,MAAO,QAAUf,KAAK,gB,iGCrB3C,YAAkD,IAArBI,EAAoB,EAApBA,WAAoB,EAARC,MAiCtD,OAhCAD,EAAWE,WAAW,CACpBC,YAAa,SAACnD,GAAD,OACX,gBAAC,EAAAoD,KAAD,CAAMC,MAAO,CAACC,aAAc,IAC1B,gBAAC,EAAAC,IAAD,KACE,gBAAC,EAAAC,KAAD,CAAMH,MAAO,CAACI,WAAY,OAAQC,SAAU,GAAIC,MAAO,SAAvD,cAIF,gBAAC,EAAAJ,IAAD,KACE,gBAAC,EAAAC,KAAD,CAAMH,MAAO,CAACM,MAAO,SAArB,yBAINC,YAAa,kBACX,gBAAC,EAAAoE,OAAD,CACEC,aAAW,EACXH,QAAS,WACP9E,EAAWkF,SAAS,UAEtB,gBAAC,EAAA9E,KAAD,CACEC,MAAO,CACLS,eAAgB,SAChBC,kBAAmB,GACnBC,YAAa,IAGf,gBAAC,EAAAmE,KAAD,CAAMvF,KAAK,OAAOS,MAAO,CAACM,MAAO,eAOvC,gBAACyE,EAAU3F,UAAX,CAAqBC,iBApCE,QAqCrB,gBAAC0F,EAAUzF,OAAX,CACEC,KAAK,OACLC,UAAWwF,UACXC,QAAS,CACPC,MAAO,QACPC,WAAY,gBAAEC,EAAF,EAAEA,QAAF,OACV,gBAAC,UAAD,CAAYA,QAASA,EAAS7F,KAAK,wBAIzC,gBAACwF,EAAUzF,OAAX,CACEC,KAAK,QACLC,UAAW6F,UACXJ,QAAS,CACPC,MAAO,OACPC,WAAY,gBAAEC,EAAF,EAAEA,QAAF,OACV,gBAAC,UAAD,CAAYA,QAASA,EAAS7F,KAAK,kBAzE/C,aACA,UACA,OACA,YACA,YACA,YACA,QAaMwF,GAAY,IAAAO,6B,iGCdH,SAAoB3I,GACjC,OACE,gBAAC,EAAA4I,SAAD,CACEhG,KAAM5C,EAAM4C,KACZiG,KAAM,GACNxF,MAAO,CAAEyF,cAAe,GACxBnF,MAAO3D,EAAMyI,QAAUM,UAAOC,gBAAkBD,UAAOE,kBAX7D,aACA,UAEA,a,oFCHA,I,EAEe,CACbC,UAHgB,UAIhBD,eAAgB,OAChBD,gBALgB,UAMhBG,OAAQ,UACRC,gBAAiB,MACjBC,UAAW,OACXC,kBAAmB,UACnBC,YAAa,UACbC,iBAXgB,UAYhBC,WAAY,Q,oICZd,UACA,OACA,YACA,SAEA,YACA,YACA,YAEMnK,EAASiG,aAAWjB,IAAI,UACxBa,EAASI,aAAWjB,IAAI,UAExBoF,EAAa,SAAC1J,GAAW,IAAD,GACQ,IAAAE,UAAS,CAACZ,SAAQ6F,WAD1B,qBACrBC,EADqB,KACTC,EADS,KAGtBsE,EAAoB,SAAC,GAAsB,IAArBrK,EAAoB,EAApBA,OAAQ6F,EAAY,EAAZA,OAClCpF,QAAQqE,IAAI9E,GACZ+F,EAAc,CAAC/F,SAAQ6F,YAUzB,OAPA,IAAA3E,YAAU,WAGR,OAFA+E,aAAWhG,iBAAiB,SAAUoK,GACtC5J,QAAQqE,IAAI,UAAYwF,KAAKC,UAAUxF,UAAQC,QACxC,WACLiB,aAAWtD,oBAAoB,SAAU0H,OAI3C,wBAAC,EAAAG,WAAD,KACE,wBAAC,EAAA1G,KAAD,CACEC,MAAO,CACL+B,EAAW9F,OAAOkG,MAAQ,IACtBC,EAAUC,UACVC,EAASD,UACbE,EAAUF,YAGZ,wBAAC,UAAD,MACA,wBAAC,UAAD,MACA,wBAAC,UAAD,CAAcN,WAAYA,OAMlCsE,EAAWK,kBAAoB,CAC7BC,OAAQ,MAGV,IAAMpE,EAAYC,aAAWC,OAAO,CAClCJ,UAAW,CACTM,gBAAiB,OACjBhC,YAAa,KAIXyB,EAAYI,aAAWC,OAAO,CAClCJ,UAAW,KAOPC,GAJYE,aAAWC,OAAO,CAClCJ,UAAW,KAGIG,aAAWC,OAAO,CACjCJ,UAAW,CAACuE,iBAAkB,O,EAGjB5B,YAAa,IAAA6B,UAAQ,SAACrI,GAAD,MAAY,CAACsI,OAAQtI,KAA7B,CAAsC6H,G,8GCpElE,cAEA,GADA,QACA,MACA,YAGIpD,GAFJ,MAEW,CACT,CAAE8D,OAAO,GACT,CAAEA,OAAO,GACT,CAAEA,OAAO,GACT,CAAEA,OAAO,GACT,CAAEA,OAAO,KAiCLC,EAASxE,aAAWC,OAAO,CAC/BJ,UAAW,CACTF,MAAO,OACPxB,YAAa,EACbsG,WAAY,IAEdC,KAAM,CACJzG,eAAgB,SAChBE,YAAa,K,EAtCD,SAAAhE,GACd,OACE,wBAAC,EAAAoD,KAAD,CAAMC,MAAOgH,EAAO3E,WAClB,wBAAC,EAAAlC,KAAD,CACEH,MAAO,CACLM,MAAO,OACPF,WAAY,OACZC,SAAU,GACV8G,UAAW,GACXF,WAAY,IANhB,qBAYA,wBAAC,EAAAlH,KAAD,KACE,wBAAC,EAAAqH,SAAD,CACEC,YAAU,EACVC,gCAAgC,EAChCzF,KAAMoB,EACNsE,aAAc,SAAChE,EAAMC,GAAP,MAAiB,MAAQA,GACvCgE,WAAY,YAAsB,IAAnBjE,EAAkB,EAAlBA,KAAkB,EAAZC,MACnB,OAAO,wBAAC,UAAD,CAAWD,KAAMA,U,oICpCpC,UACA,OAEA,GADA,MACA,QAEMkE,EAAU,SAAA9K,GAAU,IAAD,GACS,IAAAE,UAAS,GADlB,qBAChB6K,EADgB,KACNC,EADM,KAGjBC,EAAM,WACVD,EAAYD,EAAW,IAMzB,OAAIA,EAEA,wBAAC,EAAA3H,KAAD,CAAMC,MAAOgH,EAAOa,aAClB,wBAAC,EAAA9H,KAAD,CAAMC,MAAOgH,EAAOc,cAClB,wBAAC,EAAApD,YAAD,CACEnF,KAAK,QACLS,MAAO,CAAC,CAAE,CAAEM,MAAO,OAAQD,SAAU,KACrCoE,QAXK,WACTiD,EAAW,GAAGC,EAAYD,EAAW,OAarC,wBAAC,EAAA3H,KAAD,CAAMC,MAAOgH,EAAOe,YAClB,wBAAC,EAAA5H,KAAD,CAAMH,MAAOgH,EAAOgB,YAAaN,IAEnC,wBAAC,EAAA3H,KAAD,CAAMC,MAAOgH,EAAOiB,WAClB,wBAAC,EAAAvD,YAAD,CACEnF,KAAK,OACLS,MAAO,CAAC,CAAE,CAAEM,MAAO,OAAQD,SAAU,KACrCoE,QAASmD,MAOf,wBAAC,EAAA7H,KAAD,CACEC,MAAO,CAELmC,MAAO,OACP+F,KAAM,EACNC,cAAe,QAGjB,wBAAC,EAAApI,KAAD,CACEC,MAAO,CACLkI,KAAM,IACNvF,gBAAiB,OACjBD,WAAY,SACZjC,eAAgB,WAGlB,wBAAC,EAAAN,KAAD,CAAMH,MAAO,CAAEM,MAAO,OAAQD,SAAU,GAAID,WAAY,SAAxD,QAIF,wBAAC,EAAAL,KAAD,CACEC,MAAO,CACLkI,KAAM,IAGNvF,gBAAiB,OACjBD,WAAY,SACZjC,eAAgB,UAElBgE,QAASmD,GAET,wBAAC,EAAAlD,YAAD,CACEnF,KAAK,OACLS,MAAO,CACLM,MAAO,OACPD,SAAU,IAEZoE,QAASmD,OAiBfZ,EAASxE,aAAWC,OAAO,CAC/BJ,UAAW,CACTS,OAAQ,IACRX,MAAO,IACPiG,YAAa,OACbC,aAAc,CACZlG,MAAO,EACPW,OAAQ,GAEVwF,cAAe,IACfC,aAAc,KACdC,UAAW,EACX5F,aAAc,GACdjC,YAAa,EACb8H,eAAgB,GAChB7B,iBAAkB,EAClB8B,SAAU,UAEZC,UAAW,CACT7F,OAAQ,MACRnC,YAAa,EACbiI,YAAa,QAEff,YAAa,CACXK,KAAM,EACNC,cAAe,MACf1H,eAAgB,SAChBiC,WAAY,SACZ/B,YAAa,EACbiI,YAAa,QAEfX,UAAW,CACTC,KAAM,EACNxF,WAAY,SACZ/B,YAAa,GAEfmH,aAAc,CACZI,KAAM,EACNxF,WAAY,SACZ/B,YAAa,GAEfoH,WAAY,CACVG,KAAM,GACNzH,eAAgB,SAChBoI,aAAc,SACdlI,YAAa,GAEfqH,WAAY,CACV3H,SAAU,GACVD,WAAY,OACZ0I,UAAW,SACXxI,MAAO,QAETyI,OAAQ,CACNpG,gBAAiB,iB,EA/DH,SAAAhG,GAChB,OACE,wBAAC,EAAAoD,KAAD,CAAMC,MAAOgH,EAAO3E,WAClB,wBAAC,EAAAtC,KAAD,CAAMC,MAAOgH,EAAO2B,YACpB,wBAAClB,EAAD,Q,oICxFN,UACA,OACA,Y,OAEIuB,EAAgB,CAClB,CACE9D,MAAO,SACP+D,KAAM,UAER,CACE/D,MAAO,SACP+D,KAAM,UAER,CACE/D,MAAO,SACP+D,KAAM,UAER,CACE/D,MAAO,SACP+D,KAAM,UAER,CACE/D,MAAO,SACP+D,KAAM,WAIJhN,EAASiG,aAAWjB,IAAI,UACxBa,EAASI,aAAWjB,IAAI,U,EAEfiI,UAAY,SAAAvM,GAAU,IAAD,GACE,IAAAE,UAAS,CAAEZ,SAAQ6F,WADrB,qBAC3BC,EAD2B,KACfC,EADe,KAG5BC,EAAW,SAAC,GAAwB,IAAtBhG,EAAqB,EAArBA,OAAQ6F,EAAa,EAAbA,OAC1BE,EAAc,CAAE/F,SAAQ6F,YAQ1B,OANA,IAAA3E,YAAU,WAER,OADA+E,aAAWhG,iBAAiB,SAAU+F,GAC/B,WACLC,aAAWtD,oBAAoB,SAAUqD,OAI3C,wBAAC,EAAAlC,KAAD,CACEC,MAAO,CACLS,eAAgB,SAChBiC,WAAY,WAGd,wBAAC,UAAD,CACEyG,OAAQ,UACRC,IAAK,SAAAA,GAAG,OAAK,EAAKC,SAAWD,GAC7BvH,KAAMmH,EACNM,YAAavH,EAAW9F,OAAOkG,MAC/BoH,UAAWxH,EAAW9F,OAAOkG,MAC7BqF,WAAYgC,gB,YAQpBA,YAAc,YAAsB,IAAnBjG,EAAkB,EAAlBA,KAAkB,EAAZC,MACrB,OACE,wBAAC,EAAAzD,KAAD,CACEC,MAAO,CACL2C,gBAAiB,cACjBC,aAAc,EACdE,OAAQ,IACRjC,QAAS,GACToG,WAAY,GACZwC,YAAa,KAGf,wBAAC,EAAAtJ,KAAD,CAAMH,MAAO,CAAEK,SAAU,KAAOkD,EAAK2B,OACrC,wBAAC,EAAA/E,KAAD,KAAOoD,EAAK0F,S,wHC5ElB,UACA,OACA,S,iHAGA,IACMS,GAAc,EAAGC,OAAH,IADR,c,EASS,SAAChN,GAAW,IAAD,GACC,IAAAiN,UAASF,GAAjCG,EADuB,EACvBA,QAASpN,EADc,EACdA,MAAOoF,EADO,EACPA,KASvB,OAPA,IAAA1E,YAAU,WAER,OAAO,gBAKL0M,EAEA,wBAAC,EAAA9J,KAAD,KACE,wBAAC,EAAAI,KAAD,oBAGF1D,EAEA,wBAAC,EAAAsD,KAAD,KACE,wBAAC,EAAAI,KAAD,KAAOoG,KAAKC,UAAU/J,EAAMqN,WAIhC,wBAAC,EAAA/J,KAAD,CACEC,MAAO,CACLrD,EAAMoF,WAAW9F,OAAOkG,MAAQ,IAC5BC,EAAUC,UACVC,EAASD,UACbE,EAAUF,YAEZ,wBAAC,EAAAlC,KAAD,KAAOoG,KAAKC,UAAU3E,M,YAO5B,IAAMU,EAAYC,aAAWC,OAAO,CAClCJ,UAAW,CACT1B,YAAa,EACbmC,OAAQ,OAINV,EAAYI,aAAWC,OAAO,CAClCJ,UAAW,KAOPC,GAJYE,aAAWC,OAAO,CAClCJ,UAAW,KAGIG,aAAWC,OAAO,CACjCJ,UAAW,O,0FChEE,WACb,OACE,gBAAC,EAAAtC,KAAD,KACE,gBAAC,EAAAI,KAAD,sBANN,cACA,OAUeqC,aAAWC,OAAO,CAC/BJ,UAAW,CACT6F,KAAM,EACNvF,gBAAiB,c,oFCdrB,aACA,SACA,SAEMoH,GAAc,IAAAC,iBAAgB,CAClCC,0BACAC,sCAEWpL,GAAQ,IAAAqL,aAAYJ,G,qGCRjC,aAEMK,EAAe,CACnBC,SAAU,CAAC,CAAE9K,KAAM,SAAW,CAAEA,KAAM,W,cAGb,WAAmC,IAAlCf,EAAiC,uDAAzB4L,EAAcE,EAAW,uCAC3D,OAAQA,EAAOC,MACb,KAAKC,iBAAe1O,UAClB,OAAOwO,EAAOD,SAEhB,QACE,OAAO7L,K,+FCZb,aAEM4L,EAAe,CACnBK,UAAW,CAAExO,OAAQ,EAAG6F,OAAQ,I,mBAGF,WAAmC,IAAlCtD,EAAiC,uDAAzB4L,EAAcE,EAAW,uCAChE,OAAQA,EAAOC,MACb,KAAKC,iBAAezO,UAClB,OAAOuO,EAAOG,UAEhB,QACE,OAAOjM,K,8FCZb,a,kBAE+B,SAAAiM,GAC7B,MAAO,CACLF,KAAMC,iBAAezO,UACrB0O,UAAWA,M","file":"static/js/app.ced57cc6.chunk.js","sourcesContent":["import { useLinking } from \"@react-navigation/native\";\nimport { Linking } from \"expo\";\n\nexport default function(containerRef) {\n  return useLinking(containerRef, {\n    prefixes: [Linking.makeUrl(\"/\")],\n    config: {\n      Root: {\n        path: \"root\",\n        screens: {\n          Home: \"home\",\n          Links: \"links\",\n          Settings: \"settings\"\n        }\n      }\n    }\n  });\n}\n","export const reduxConstants = {\n  CART_LIST: \"CART_LIST\",\n  DIMENSION: \"DIMENSION\"\n};\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","/**\n * FreshKick Expo App\n * https://freshkick.com/Home\n *\n * @flow\n */\n\nimport React, { useEffect } from \"react\";\nimport Application from \"./src/Application\";\nimport { SplashScreen } from \"expo\";\nimport * as Font from \"expo-font\";\nimport useLinking from \"./src/navigation/useLinking\";\n\nconst App = props => {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n  const [initialNavigationState, setInitialNavigationState] = React.useState();\n  const containerRef = React.useRef();\n  const { getInitialState } = useLinking(containerRef);\n\n  // Load any resources or data that we need prior to rendering the app\n  useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHide();\n\n        // Load our initial navigation state\n        setInitialNavigationState(await getInitialState());\n\n        // Load fonts\n        await Font.loadAsync({\n          /* ...Ionicons.font,\n          \"space-mono\": require(\"./assets/fonts/SpaceMono-Regular.ttf\") */\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hide();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n  //console.disableYellowBox = true;\n  if (!isLoadingComplete && !props.skipLoadingScreen) {\n    return null;\n  } else {\n    return <Application />;\n  }\n};\n\nexport default App;\n","import React, {Component} from 'react';\nimport {AppState} from 'react-native';\nimport AppStackNavigator from './navigation/Routes';\nimport {Provider} from 'react-redux';\nimport {store} from './redux/ReduxStore';\nimport {DimensionAction} from './redux/actions/DimensionAction';\nimport {\n  ApolloProvider,\n  ApolloClient,\n  HttpLink,\n  InMemoryCache,\n} from '@apollo/client';\n\n//Apollo Client Configuration\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  /* ApolloLink.from([\n    onError(({graphQLErrors, networkError}) => {\n      if (graphQLErrors)\n        graphQLErrors.forEach(({message, locations, path}) =>\n          console.log(\n            `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,\n          ),\n        );\n      if (networkError) console.log(`[Network error]: ${networkError}`);\n    }), */\n  link: new HttpLink({\n    uri: 'http://192.168.1.90:3000/admin/api',\n    credentials: 'same-origin',\n  }),\n  /* ]), */\n});\n\nclass Application extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      appState: AppState.currentState,\n    };\n  }\n\n  componentDidMount() {\n    AppState.addEventListener('change', this.handleAppStateChange);\n  }\n\n  componentWillUnmount() {\n    AppState.removeEventListener('change', this.handleAppStateChange);\n  }\n\n  handleAppStateChange = (nextAppState) => {\n    this.setState({appState: nextAppState});\n  };\n\n  render() {\n    return (\n      <Provider store={store}>\n        <ApolloProvider client={client}>\n          <AppStackNavigator />\n        </ApolloProvider>\n      </Provider>\n    );\n  }\n}\n\nexport default Application;\n","import \"react-native-gesture-handler\";\nimport React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport CartScreen from \"../screens/CartScreen\";\nimport BottomTabNavigator from \"./BottomTabNavigator\";\n\nconst Stack = createStackNavigator();\n\nconst AppStackNavigator = props => {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Home\">\n        <Stack.Screen name=\"Home\" component={BottomTabNavigator} />\n        <Stack.Screen name=\"Cart\" component={CartScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default AppStackNavigator;\n","import React, { useEffect, useState } from \"react\";\nimport { View, Text } from \"react-native\";\nimport { Row, Container, Thumbnail, Button } from \"native-base\";\nimport { MobileLoginBlock } from \"../comp/cartComp/MobileLoginBlock\";\nimport { CartList } from \"../comp/cartComp/CartList\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\n\nexport default function CartScreen({ navigation, route }) {\n  navigation.setOptions({\n    headerTitle: props => (\n      <View style={{ paddingRight: 5 }}>\n        <Row>\n          <Text style={{ fontWeight: \"bold\", fontSize: 20, color: \"#7a0\" }}>\n            Cart\n          </Text>\n        </Row>\n        <Row>\n          <Text style={{ color: \"#aaa\" }}>\n            Total Cart Value is <Text style={{ color: \"#0aa\" }}>Rs:737</Text>\n          </Text>\n        </Row>\n      </View>\n    ),\n    headerRight: () => (\n      <Container\n        style={{\n          justifyContent: \"center\",\n          paddingHorizontal: 15,\n          borderWidth: 0\n        }}\n      >\n        <Thumbnail\n          style={{ padding: 10 }}\n          source={{\n            uri:\n              \"https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885_960_720.jpg\"\n          }}\n        />\n      </Container>\n    )\n  });\n\n  const [result, setResult] = React.useState(null);\n\n  useEffect(() => {\n    //Cookies.set('test', 'test cokkie');\n    console.log(Cookies.get(\"keystone.sid\"));\n    console.log(\"testing app------ api\");\n    getAllProducts();\n    return () => {\n      //cleanup;\n    };\n  });\n\n  return (\n    <View>\n      <MobileLoginBlock />\n      <CartList />\n    </View>\n  );\n}\n\nconst getAllProducts = async () => {\n  return new Promise(async (resolve, reject) => {\n    await axios\n      .get(\n        \"http://localhost:3000/\",\n        {},\n        {\n          timeout: 2000\n        }\n      )\n      .then(response => {\n        let c = Cookies.get(\"test\");\n        console.log(\"++++++++++++++\" + c);\n\n        console.log(\n          \"axios response-- \" +\n            \"LoginAPI_status::\" +\n            response.status +\n            \"LoginAPI_body::\" +\n            response.data\n        );\n        resolve(response);\n        //cbRes(\"pass\")\n      })\n      .catch(error => {\n        console.log(\"axios error:\", error);\n        reject(error);\n      });\n  });\n};\n","import React, {useEffect, useState} from 'react';\nimport {View, Text, StyleSheet, Dimensions} from 'react-native';\n\nexport const MobileLoginBlock = (props) => {\n  const [dimensions, setDimensions] = useState({window, screen});\n\n  const onChange = ({window, screen}) => {\n    console.log(dimensions);\n    setDimensions({window, screen});\n  };\n\n  useEffect(() => {\n    //effect\n    Dimensions.addEventListener('change', onChange);\n    return () => {\n      //cleanup\n      Dimensions.removeEventListener('change', onChange);\n    };\n  }, []);\n\n  return (\n    <View\n      style={[\n        dimensions.window.width < 500\n          ? MobStyles.container\n          : PcStyles.container,\n        ComStyles.container,\n      ]}>\n      <View>\n        <Text>SignUP</Text>\n      </View>\n    </View>\n  );\n};\n\nconst ComStyles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff',\n    borderWidth: 0,\n    borderRadius: 10,\n  },\n});\n\nconst MobStyles = StyleSheet.create({\n  container: {\n    margin: '2vw',\n    width: '96vw',\n    height: '20vh',\n    borderRadius: 10,\n  },\n});\n\nconst TabStyles = StyleSheet.create({\n  container: {},\n});\n\nconst PcStyles = StyleSheet.create({\n  container: {\n    margin: '2vw',\n    width: '96vw',\n    height: '20vh',\n    borderRadius: 10,\n  },\n});\n","import React from \"react\";\nimport { View, Text } from \"react-native\";\nimport { CartItem } from \"./CartItem\";\n\nexport const CartList = () => {\n  return (\n    <View style={{ margin: \"0vw\", borderWidth: 0 }}>\n      <Text style={{ color: \"#aaa\", fontSize: 15, alignSelf: \"center\" }}>\n        You have 3 Items in your cart\n      </Text>\n      <CartItem />\n    </View>\n  );\n};\n","import React from \"react\";\nimport {\n  Container,\n  Header,\n  Content,\n  List,\n  ListItem,\n  Thumbnail,\n  Text,\n  Left,\n  Body,\n  Right,\n  Button,\n  View,\n  Row,\n  Col\n} from \"native-base\";\nimport { QuantityView1 } from \"../common/QuantityView1\";\n\nlet list = [\n  { Name: \"Oranges\", qty: 5 },\n  { Name: \"Apple\", qty: 5 },\n  { Name: \"Mango\", qty: 5 },\n  { Name: \"Lemon\", qty: 5 }\n];\n\nexport const CartItem = () => {\n  return (\n    <Container>\n      <Content>\n        <List>\n          {list.map((item, index) => (\n            <_ListItem item={item} index={index} />\n          ))}\n        </List>\n      </Content>\n    </Container>\n  );\n};\n\n_ListItem = props => {\n  return (\n    <ListItem thumbnail key={props.index}>\n      <View>\n        <Left>\n          <Thumbnail\n            square\n            style={{ width: 30, height: 30 }}\n            source={{\n              uri:\n                \"https://lh3.googleusercontent.com/coMv1dl31PCfEs6essJoEUwVryaqKHKQvENdZ_WYpN-PXa8Qfitkg3grQxIVN22W5A\"\n            }}\n          />\n        </Left>\n      </View>\n      <Body>\n        <Text>{props.item.Name}</Text>\n        <Text note numberOfLines={1}>\n          Rich Source of Vitamin C...\n        </Text>\n      </Body>\n      <Right>\n        <QuantityView1 qty={props.item.qty} onPlus={onPlus} onMinus={onMinus} />\n      </Right>\n    </ListItem>\n  );\n};\n\nonPlus = props => {\n  console.log(\"on plus\");\n};\n\nonMinus = props => {\n  console.log(\"on minus\");\n};\n","import React from \"react\";\nimport { Row, Col, View, Text, Button } from \"native-base\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\n\nexport const QuantityView1 = props => {\n  return (\n    <View style={{ borderWidth: 1, paddingVertical: 0 }}>\n      <Row>\n        <Col>\n          <TouchableOpacity onPress={props.onMinus}>\n            <View\n              style={{\n                backgroundColor: \"#aaa\",\n                paddingHorizontal: 8,\n                paddingVertical: 8,\n                borderRadius: 5\n              }}\n            >\n              <FontAwesome style={{ color: \"#fff\" }} name=\"minus\" />\n            </View>\n          </TouchableOpacity>\n        </Col>\n        <View\n          style={{\n            paddingHorizontal: 15,\n            justifyContent: \"center\"\n          }}\n        >\n          <Text style={{ fontSize: 18, fontWeight: \"bold\", color: \"#aaa\" }}>\n            {props.qty ? props.qty : 0}\n          </Text>\n        </View>\n        <Col>\n          <TouchableOpacity onPress={props.onPlus}>\n            <View\n              style={{\n                backgroundColor: \"#aaa\",\n                paddingHorizontal: 8,\n                paddingVertical: 8,\n                borderRadius: 5\n              }}\n            >\n              <FontAwesome style={{ color: \"#fff\" }} name=\"plus\" />\n            </View>\n          </TouchableOpacity>\n        </Col>\n      </Row>\n    </View>\n  );\n};\n","import {createBottomTabNavigator} from '@react-navigation/bottom-tabs';\nimport * as React from 'react';\nimport {View, Text} from 'react-native';\nimport TabBarIcon from '../../components/TabBarIcon';\nimport HomeScreen from '../screens/HomeScreen';\nimport LinksScreen from '../screens/LinksScreen';\nimport {\n  Container,\n  Left,\n  Button,\n  Icon,\n  Body,\n  Title,\n  Right,\n  Header,\n  Row,\n  Col,\n} from 'native-base';\n\nconst BottomTab = createBottomTabNavigator();\nconst INITIAL_ROUTE_NAME = 'Home';\n\nexport default function BottomTabNavigator({navigation, route}) {\n  navigation.setOptions({\n    headerTitle: (props) => (\n      <View style={{paddingRight: 5}}>\n        <Row>\n          <Text style={{fontWeight: 'bold', fontSize: 20, color: '#7a0'}}>\n            KickFresh\n          </Text>\n        </Row>\n        <Row>\n          <Text style={{color: '#aaa'}}>Store to Your Door</Text>\n        </Row>\n      </View>\n    ),\n    headerRight: () => (\n      <Button\n        transparent\n        onPress={() => {\n          navigation.navigate('Cart');\n        }}>\n        <View\n          style={{\n            justifyContent: 'center',\n            paddingHorizontal: 15,\n            borderWidth: 0,\n            /* backgroundColor: '#f00', */\n          }}>\n          <Icon name=\"cart\" style={{color: '#7a0'}} />\n        </View>\n      </Button>\n    ),\n  });\n\n  return (\n    <BottomTab.Navigator initialRouteName={INITIAL_ROUTE_NAME}>\n      <BottomTab.Screen\n        name=\"Home\"\n        component={HomeScreen}\n        options={{\n          title: 'Store',\n          tabBarIcon: ({focused}) => (\n            <TabBarIcon focused={focused} name=\"md-code-working\" />\n          ),\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Links\"\n        component={LinksScreen}\n        options={{\n          title: 'Cart',\n          tabBarIcon: ({focused}) => (\n            <TabBarIcon focused={focused} name=\"md-book\" />\n          ),\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\nfunction getHeaderTitle(route) {\n  const routeName =\n    route.state?.routes[route.state.index]?.name ?? INITIAL_ROUTE_NAME;\n\n  switch (routeName) {\n    case 'Home':\n      return 'FreshKick';\n    case 'Links':\n      return 'Links to learn more';\n  }\n}\n","import { Ionicons } from '@expo/vector-icons';\nimport * as React from 'react';\n\nimport Colors from '../constants/Colors';\n\nexport default function TabBarIcon(props) {\n  return (\n    <Ionicons\n      name={props.name}\n      size={30}\n      style={{ marginBottom: -3 }}\n      color={props.focused ? Colors.tabIconSelected : Colors.tabIconDefault}\n    />\n  );\n}\n","const tintColor = '#2f95dc';\n\nexport default {\n  tintColor,\n  tabIconDefault: '#ccc',\n  tabIconSelected: tintColor,\n  tabBar: '#fefefe',\n  errorBackground: 'red',\n  errorText: '#fff',\n  warningBackground: '#EAEB5E',\n  warningText: '#666804',\n  noticeBackground: tintColor,\n  noticeText: '#fff',\n};\n","import React, {useState, useEffect} from 'react';\nimport {StyleSheet, Text, View, Dimensions, ScrollView} from 'react-native';\nimport FlatRow from '../comp/FlatRow';\nimport {connect} from 'react-redux';\n//import { useFocusEffect } from \"@react-navigation/core\";\nimport BannerRow from '../comp/BannerRow';\nimport CategoryList from '../comp/homescreencomp/CategoryList';\nimport Cookies from 'js-cookie';\n\nconst window = Dimensions.get('window');\nconst screen = Dimensions.get('screen');\n\nconst Homescreen = (props) => {\n  const [dimensions, setDimensions] = useState({window, screen});\n\n  const onDimensionChange = ({window, screen}) => {\n    console.log(window);\n    setDimensions({window, screen});\n  };\n\n  useEffect(() => {\n    Dimensions.addEventListener('change', onDimensionChange);\n    console.log('-------' + JSON.stringify(Cookies.get()));\n    return () => {\n      Dimensions.removeEventListener('change', onDimensionChange);\n    };\n  });\n  return (\n    <ScrollView>\n      <View\n        style={[\n          dimensions.window.width < 500\n            ? MobStyles.container\n            : PcStyles.container,\n          ComStyles.container,\n        ]}>\n        {/*PLACE: USP_BAR  */}\n        <BannerRow />\n        <FlatRow /* cartList={cartList} */ />\n        <CategoryList dimensions={dimensions} />\n      </View>\n    </ScrollView>\n  );\n};\n\nHomescreen.navigationOptions = {\n  header: null,\n};\n\nconst ComStyles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff',\n    borderWidth: 0,\n  },\n});\n\nconst MobStyles = StyleSheet.create({\n  container: {},\n});\n\nconst TabStyles = StyleSheet.create({\n  container: {},\n});\n\nconst PcStyles = StyleSheet.create({\n  container: {marginHorizontal: 50},\n});\n\nexport default HomeScreen = connect((state) => ({istate: state}))(Homescreen);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { View, Text, StyleSheet, FlatList } from \"react-native\";\nimport ItemType1 from \"./ItemType1\";\nimport { Row } from \"native-base\";\n\nlet list = [\n  { Timer: true },\n  { Timer: true },\n  { Timer: false },\n  { Timer: false },\n  { Timer: false }\n];\n\nconst FlatRow = props => {\n  return (\n    <View style={styles.container}>\n      <Text\n        style={{\n          color: \"#aaa\",\n          fontWeight: \"bold\",\n          fontSize: 20,\n          marginTop: 10,\n          marginLeft: 5\n        }}\n      >\n        Trending Products\n      </Text>\n\n      <View>\n        <FlatList\n          horizontal\n          showsHorizontalScrollIndicator={false}\n          data={list}\n          keyExtractor={(item, index) => \"key\" + index}\n          renderItem={({ item, index }) => {\n            return <ItemType1 item={item} />;\n          }}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    borderWidth: 0,\n    marginLeft: 10\n  },\n  head: {\n    justifyContent: \"center\",\n    borderWidth: 0\n  }\n});\n\nexport default FlatRow;\n","import React, { useState } from \"react\";\nimport { View, StyleSheet, Text } from \"react-native\";\nimport { Icon, Button, Row, Col, Container } from \"native-base\";\nimport { FontAwesome } from \"@expo/vector-icons\";\n\nconst AddView = props => {\n  const [quantity, setQuantity] = useState(0);\n\n  const add = () => {\n    setQuantity(quantity + 1);\n  };\n  const remove = () => {\n    if (quantity > 0) setQuantity(quantity - 1);\n  };\n\n  if (quantity) {\n    return (\n      <View style={styles.ItemAddView}>\n        <View style={styles.RemoveButton}>\n          <FontAwesome\n            name=\"minus\"\n            style={[, { color: \"#aaa\", fontSize: 22 }]}\n            onPress={remove}\n          />\n        </View>\n        <View style={styles.centerText}>\n          <Text style={styles.amountText}>{quantity}</Text>\n        </View>\n        <View style={styles.AddButton}>\n          <FontAwesome\n            name=\"plus\"\n            style={[, { color: \"#aaa\", fontSize: 22 }]}\n            onPress={add}\n          />\n        </View>\n      </View>\n    );\n  } else {\n    return (\n      <View\n        style={{\n          //backgroundColor: \"#aaa\",\n          width: \"100%\",\n          flex: 1,\n          flexDirection: \"row\"\n        }}\n      >\n        <View\n          style={{\n            flex: 3.5,\n            backgroundColor: \"#af0\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          }}\n        >\n          <Text style={{ color: \"#fff\", fontSize: 18, fontWeight: \"bold\" }}>\n            ADD\n          </Text>\n        </View>\n        <View\n          style={{\n            flex: 1.5,\n            //borderWidth: 2,\n            //borderColor: \"0f0\",\n            backgroundColor: \"#0f9\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          }}\n          onPress={add}\n        >\n          <FontAwesome\n            name=\"plus\"\n            style={{\n              color: \"#fff\",\n              fontSize: 22\n            }}\n            onPress={add}\n          />\n        </View>\n      </View>\n    );\n  }\n};\n\nconst ItemType1 = props => {\n  return (\n    <View style={styles.container}>\n      <View style={styles.itemImage}></View>\n      <AddView />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 150,\n    width: 150,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.32,\n    shadowRadius: 5.46,\n    elevation: 9,\n    borderRadius: 10,\n    borderWidth: 0,\n    marginVertical: 10,\n    marginHorizontal: 5,\n    overflow: \"hidden\"\n  },\n  itemImage: {\n    height: \"70%\",\n    borderWidth: 0,\n    borderColor: \"#0f0\"\n  },\n  ItemAddView: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderWidth: 0,\n    borderColor: \"#f00\"\n  },\n  AddButton: {\n    flex: 1,\n    alignItems: \"center\",\n    borderWidth: 0\n  },\n  RemoveButton: {\n    flex: 1,\n    alignItems: \"center\",\n    borderWidth: 0\n  },\n  centerText: {\n    flex: 0.6,\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    borderWidth: 0\n  },\n  amountText: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    color: \"#aaa\"\n  },\n  button: {\n    backgroundColor: \"transparent\"\n  }\n});\nexport default ItemType1;\n","import React, { useState, useEffect } from \"react\";\nimport { View, Text, Dimensions } from \"react-native\";\nimport Carousel from \"react-native-snap-carousel\";\n\nlet carouselItems = [\n  {\n    title: \"Item 1\",\n    text: \"Text 1\"\n  },\n  {\n    title: \"Item 2\",\n    text: \"Text 2\"\n  },\n  {\n    title: \"Item 3\",\n    text: \"Text 3\"\n  },\n  {\n    title: \"Item 4\",\n    text: \"Text 4\"\n  },\n  {\n    title: \"Item 5\",\n    text: \"Text 5\"\n  }\n];\n\nconst window = Dimensions.get(\"window\");\nconst screen = Dimensions.get(\"screen\");\n\nexport default BannerRow = props => {\n  const [dimensions, setDimensions] = useState({ window, screen });\n\n  const onChange = ({ window, screen }) => {\n    setDimensions({ window, screen });\n  };\n  useEffect(() => {\n    Dimensions.addEventListener(\"change\", onChange);\n    return () => {\n      Dimensions.removeEventListener(\"change\", onChange);\n    };\n  });\n  return (\n    <View\n      style={{\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }}\n    >\n      <Carousel\n        layout={\"default\"}\n        ref={ref => (this.carousel = ref)}\n        data={carouselItems}\n        sliderWidth={dimensions.window.width}\n        itemWidth={dimensions.window.width}\n        renderItem={_renderItem}\n        //useNativeDriver={false}\n        //onSnapToItem = { index => this.setState({activeIndex:index}) }\n      />\n    </View>\n  );\n};\n\n_renderItem = ({ item, index }) => {\n  return (\n    <View\n      style={{\n        backgroundColor: \"floralwhite\",\n        borderRadius: 5,\n        height: 250,\n        padding: 50,\n        marginLeft: 25,\n        marginRight: 25\n      }}\n    >\n      <Text style={{ fontSize: 30 }}>{item.title}</Text>\n      <Text>{item.text}</Text>\n    </View>\n  );\n};\n","import React, {useEffect} from 'react';\nimport {View, StyleSheet, Text} from 'react-native';\nimport {useQuery, gql} from '@apollo/client';\n\n//Apollo Query\nconst ven = 'allVendors';\nconst getVendorQuery = gql`\n  {\n    ${ven} {\n      Name\n    }\n  }\n`;\n\nconst CategoryList = (props) => {\n  const {loading, error, data} = useQuery(getVendorQuery);\n\n  useEffect(() => {\n    //effect\n    return () => {\n      //cleanup\n    };\n  });\n\n  if (loading)\n    return (\n      <View>\n        <Text>Loading...</Text>\n      </View>\n    );\n  if (error)\n    return (\n      <View>\n        <Text>{JSON.stringify(error.message)}</Text>\n      </View>\n    );\n  return (\n    <View\n      style={[\n        props.dimensions.window.width < 500\n          ? MobStyles.container\n          : PcStyles.container,\n        ComStyles.container,\n      ]}>\n      <Text>{JSON.stringify(data)}</Text>\n    </View>\n  );\n};\n\nexport default CategoryList;\n\nconst ComStyles = StyleSheet.create({\n  container: {\n    borderWidth: 1,\n    height: 250,\n  },\n});\n\nconst MobStyles = StyleSheet.create({\n  container: {},\n});\n\nconst TabStyles = StyleSheet.create({\n  container: {},\n});\n\nconst PcStyles = StyleSheet.create({\n  container: {},\n});\n","import * as React from 'react';\nimport {StyleSheet, Text, View} from 'react-native';\n\nexport default function LinksScreen() {\n  return (\n    <View>\n      <Text>Link Screen</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fafafa',\n  },\n});\n","import { createStore, combineReducers } from \"redux\";\nimport { cartReducer } from \"./reducers/CartListReducer\";\nimport { DimensionReducer } from \"./reducers/DimensionReducer\";\n\nconst allReducers = combineReducers({\n  cartReducer,\n  DimensionReducer\n});\nexport const store = createStore(allReducers);\n","import { reduxConstants } from \"../ReduxConstants\";\n\nconst initialState = {\n  cartList: [{ name: \"Item1\" }, { name: \"Item2\" }]\n};\n\nexport const cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxConstants.CART_LIST:\n      return action.cartList;\n\n    default:\n      return state;\n  }\n};\n","import { reduxConstants } from \"../ReduxConstants\";\n\nconst initialState = {\n  Dimension: { window: 0, screen: 0 }\n};\n\nexport const DimensionReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxConstants.DIMENSION:\n      return action.Dimension;\n\n    default:\n      return state;\n  }\n};\n","import { reduxConstants } from \"../ReduxConstants\";\n\nexport const DimensionAction = Dimension => {\n  return {\n    type: reduxConstants.DIMENSION,\n    Dimension: Dimension\n  };\n};\n"],"sourceRoot":""}